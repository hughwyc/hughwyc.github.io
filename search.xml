<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Cpp-Study</title>
    <url>/posts/cpp-study/</url>
    <content><![CDATA[<h3 id="1-命名空间namespace"><a href="#1-命名空间namespace" class="headerlink" title="1. 命名空间namespace"></a>1. 命名空间namespace</h3><p>命名空间是ANSIC++引入的可以由用户命名的作用域，用来处理程序中常见的同名冲突。</p>
<p>在 文件中可以定义全局变量(global variable)，它的作用域是整个程序。如果在文件A中定义了一个变量a int a=3；在文件B中可以再定义一个变量a int a=5;</p>
<p>在分别对文件A和文件B进行编译时不会有问题。但是，如果一个程序包括文件A和文件B，那么在进行连接时，会报告出错，因为在同一个程序中有两个同名的变量，认为是对变量的重复定义。</p>
<p>可以通过extern声明同一程序中的两个文件中的同名变量是同一个变量。如果在文件B中有：<code>extem int a；</code>，表示文件B中的变量a是在其他文件中已定义的变量。由于有此声明，在程序编译和连接后，文件A的变量a的作用域扩展到了文件B。</p>
<p><strong>命名空间</strong>：实际上就是一个由程序设计者命名的内存区域，程序设计者可以根据需要指定一些有名字的空间域，把一些全局实体分别放在各个命名空间中，从而与其他全局实体分隔开来。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">namespace</span> ns1 <span class="comment">//指定命名中间nsl</span></span><br><span class="line">&#123; <span class="keyword">int</span> a；</span><br><span class="line"><span class="keyword">double</span> b; &#125;</span><br></pre></td></tr></table></figure>

<p>命名空间成员包括变量a和b，注意a和b仍然是全局变量，仅仅是把它们隐藏在指定的命名空间中而已。如果在程序中要使用变量a和b，必须加上命名空间名和作用域分辨符“::”，如nsl::a，nsl::b。这种用法称为命名空间限定(qualified)，这些名字(如nsl::a)称为被限定名 (qualified name)。</p>
<p>C++中命名空间的作用类似于操作系统中的目录和文件的关系，由于文件很多，不便管理，而且容易重名，于是人们设立若干子目录，把文件分别放到不同的子目录中，不同子目录中的文件可以同名。调用文件时应指出文件路径。</p>
<h3 id="2-VS中快捷键"><a href="#2-VS中快捷键" class="headerlink" title="2. VS中快捷键"></a>2. VS中快捷键</h3><p><code>ctrl + k</code> + <code>ctrl + c</code>，注释</p>
<p><code>ctrl + k</code> + <code>ctrl + u</code>，取消注释</p>
<p><code>ctrl + k</code> + <code>ctrl + f</code>，格式化代码</p>
<h3 id="3-容器-向量（Vector）"><a href="#3-容器-向量（Vector）" class="headerlink" title="3. 容器-向量（Vector）"></a>3. 容器-向量（Vector）</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="title">vec0</span><span class="params">(<span class="number">4</span>,<span class="number">0</span>)</span></span>; <span class="comment">// 向量初始化,长度为4，元素初始值均为0</span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; vec = &#123;<span class="number">2</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">6</span>&#125;; <span class="comment">// 向量初始化法</span></span><br><span class="line">vec.<span class="built_in">size</span>() <span class="comment">// 返回容器的元素个数</span></span><br><span class="line">vec.<span class="built_in">begin</span>() <span class="comment">// 返回指向 首元素 的迭代器（即容器指针）</span></span><br><span class="line">vec.<span class="built_in">end</span>() <span class="comment">// 返回指向尾 *元素下一位置* 的迭代器</span></span><br><span class="line">vec.rbegin() <span class="comment">// 返回一个迭代器，即reverse的begin() 指向最后一个元素</span></span><br><span class="line">vec.rend() <span class="comment">// 返回一个迭代器， 指向第一个元素的前一个位置</span></span><br><span class="line"><span class="keyword">int</span> maxV = *max_element(vec.<span class="built_in">begin</span>(), vec.<span class="built_in">end</span>()); <span class="comment">// 求向量中的最大值</span></span><br><span class="line">vec.push_back(<span class="number">5</span>); <span class="comment">// 在表尾添加一个元素</span></span><br><span class="line">sort(vec.<span class="built_in">begin</span>(), vec.<span class="built_in">end</span>());   <span class="comment">// 正向排序 即按照从小到大的顺序排序</span></span><br><span class="line">sort(vec.rbegin(), vec.rend()); <span class="comment">// 逆向排序 即按照从大到小的顺序进行排序</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; (vec0 == vec) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="comment">// 判断两个vector是否相等，可以直接使用“==”或者“!=”进行比较</span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;::iterator ret;</span><br><span class="line">ret = <span class="built_in">std</span>::<span class="built_in">find</span>(vec.<span class="built_in">begin</span>(), vec.<span class="built_in">end</span>(), <span class="number">15</span>);</span><br><span class="line"><span class="comment">// 判断某特定值是否存在于vector中</span></span><br><span class="line"><span class="keyword">if</span>(ret == vec.<span class="built_in">end</span>())</span><br><span class="line">     <span class="built_in">cout</span> &lt;&lt; <span class="string">"not found"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">     <span class="built_in">cout</span> &lt;&lt; <span class="string">"found it"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br></pre></td></tr></table></figure>

<h3 id="4-运算符的运算效率"><a href="#4-运算符的运算效率" class="headerlink" title="4. 运算符的运算效率"></a>4. 运算符的运算效率</h3><p>在某一次测试中，同一段代码执行 10^8 次，计算所用时间：</p>
<p>赋值运算（净运行时间0.8ms）；super fast</p>
<p><font color=green>加法运算（净运行时间41.45ms）；fast</font></p>
<p><font color=green>减法运算（净运行时间42.95ms）；fast</font></p>
<p>乘法运算（净运行时间58.25ms）；normal</p>
<p><font color=red>除法运算（净运行时间1210.2ms）；slow</font></p>
<p><font color=red>取模运算（净运行时间1178.15ms）；slow</font></p>
]]></content>
      <categories>
        <category>Coding</category>
      </categories>
      <tags>
        <tag>[object Object]</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode-Cpp</title>
    <url>/posts/leetcode-cpp/</url>
    <content><![CDATA[<p>可以正式开始了~</p>
<h2 id="Day-2020-05-31"><a href="#Day-2020-05-31" class="headerlink" title="Day-2020-05-31"></a>Day-2020-05-31</h2><h3 id="1431-Kids-With-the-Greatest-Number-of-Candies"><a href="#1431-Kids-With-the-Greatest-Number-of-Candies" class="headerlink" title="1431. Kids With the Greatest Number of Candies"></a><a href="https://leetcode-cn.com/problems/kids-with-the-greatest-number-of-candies/" target="_blank" rel="noopener">1431. Kids With the Greatest Number of Candies</a></h3><p><font color = green >[easy]</font></p>
<p>Given the array <code>candies</code> and the integer <code>extraCandies</code>, where <code>candies[i]</code> represents the number of candies that the <strong>ith</strong> kid has.</p>
<p>For each kid check if there is a way to distribute <code>extraCandies</code> among the kids such that he or she can have the <strong>greatest</strong> number of candies among them. Notice that multiple kids can have the <strong>greatest</strong> number of candies.</p>
<p><strong>Example 1:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: candies &#x3D; [2,3,5,1,3], extraCandies &#x3D; 3</span><br><span class="line">Output: [true,true,true,false,true] </span><br><span class="line">Explanation: </span><br><span class="line">Kid 1 has 2 candies and if he or she receives all extra candies (3) will have 5 candies --- the greatest number of candies among the kids. </span><br><span class="line">Kid 2 has 3 candies and if he or she receives at least 2 extra candies will have the greatest number of candies among the kids. </span><br><span class="line">Kid 3 has 5 candies and this is already the greatest number of candies among the kids. </span><br><span class="line">Kid 4 has 1 candy and even if he or she receives all extra candies will only have 4 candies. </span><br><span class="line">Kid 5 has 3 candies and if he or she receives at least 2 extra candies will have the greatest number of candies among the kids.</span><br></pre></td></tr></table></figure>

<p><strong>Example 2:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: candies &#x3D; [4,2,1,1,2], extraCandies &#x3D; 1</span><br><span class="line">Output: [true,false,false,false,false] </span><br><span class="line">Explanation: There is only 1 extra candy, therefore only kid 1 will have the greatest number of candies among the kids regardless of who takes the extra candy.</span><br></pre></td></tr></table></figure>

<p><strong>Example 3:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: candies &#x3D; [12,1,12], extraCandies &#x3D; 10</span><br><span class="line">Output: [true,false,true]</span><br></pre></td></tr></table></figure>

<p><strong>Constraints:</strong></p>
<ul>
<li><code>2 &lt;= candies.length &lt;= 100</code></li>
<li><code>1 &lt;= candies[i] &lt;= 100</code></li>
<li><code>1 &lt;= extraCandies &lt;= 50</code></li>
</ul>
<h4 id="My-Code"><a href="#My-Code" class="headerlink" title="My Code:"></a>My Code:</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="built_in">vector</span>&lt;<span class="keyword">bool</span>&gt; <span class="title">kidsWithCandies</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &amp;candies, <span class="keyword">int</span> extraCandies)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">int</span> len = candies.<span class="built_in">size</span>();</span><br><span class="line">		<span class="built_in">vector</span>&lt;<span class="keyword">bool</span>&gt; result;</span><br><span class="line">		<span class="keyword">int</span> maxV = *max_element(candies.<span class="built_in">begin</span>(), candies.<span class="built_in">end</span>());</span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">			<span class="keyword">if</span> (candies[i] + extraCandies &gt;= maxV)</span><br><span class="line">				result.push_back(<span class="number">1</span>);</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">				result.push_back(<span class="number">0</span>); <span class="comment">// 指在容器尾端插入"0" [false]</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> result;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h3 id="0035-Search-Insert-Position"><a href="#0035-Search-Insert-Position" class="headerlink" title="0035. Search Insert Position"></a><a href="https://leetcode-cn.com/problems/search-insert-position/" target="_blank" rel="noopener">0035. Search Insert Position</a></h3><p><font color = green >[easy]</font></p>
<p>Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.</p>
<p>You may assume no duplicates in the array.</p>
<p><strong>Example 1:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: [1,3,5,6], 5</span><br><span class="line">Output: 2</span><br></pre></td></tr></table></figure>

<p><strong>Example 2:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: [1,3,5,6], 2</span><br><span class="line">Output: 1</span><br></pre></td></tr></table></figure>

<p><strong>Example 3:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: [1,3,5,6], 7</span><br><span class="line">Output: 4</span><br></pre></td></tr></table></figure>

<p><strong>Example 4:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: [1,3,5,6], 0</span><br><span class="line">Output: 0</span><br></pre></td></tr></table></figure>

<h4 id="My-Code-1"><a href="#My-Code-1" class="headerlink" title="My Code:"></a>My Code:</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">searchInsert</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &amp;nums, <span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">int</span> len = nums.<span class="built_in">size</span>();</span><br><span class="line">		<span class="keyword">if</span> (nums[<span class="number">0</span>] &gt; target) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">if</span> (nums[len - <span class="number">1</span>] &lt; target) <span class="keyword">return</span> len;</span><br><span class="line">		<span class="keyword">int</span> i;</span><br><span class="line">		<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">			<span class="keyword">if</span> (target == nums[i])</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">if</span> (target &lt; nums[i])</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> i;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h3 id="0665-Non-decreasing-Array"><a href="#0665-Non-decreasing-Array" class="headerlink" title="0665. Non-decreasing Array"></a><a href="https://leetcode-cn.com/problems/non-decreasing-array/" target="_blank" rel="noopener">0665. Non-decreasing Array</a></h3><p><font color = green >[easy]</font>（并不easy...）</p>
<p>Given an array <code>nums</code> with <code>n</code> integers, your task is to check if it could become non-decreasing by modifying <strong>at most</strong> <code>1</code> element.</p>
<p>We define an array is non-decreasing if <code>nums[i] &lt;= nums``[i + 1]</code> holds for every <code>i</code> (0-based) such that <code>(0 &lt;= i &lt;= n - 2)</code>.</p>
<p><strong>Example 1:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: nums &#x3D; [4,2,3]</span><br><span class="line">Output: true</span><br><span class="line">Explanation: You could modify the first 4 to 1 to get a non-decreasing array.</span><br></pre></td></tr></table></figure>

<p><strong>Example 2:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: nums &#x3D; [4,2,1]</span><br><span class="line">Output: false</span><br><span class="line">Explanation: You can&#39;t get a non-decreasing array by modify at most one element.</span><br></pre></td></tr></table></figure>

<p><strong>Constraints:</strong></p>
<ul>
<li><code>1 &lt;= n &lt;= 10 ^ 4</code></li>
<li><code>- 10 ^ 5 &lt;= nums[i] &lt;= 10 ^ 5</code></li>
</ul>
<h4 id="My-Code-2"><a href="#My-Code-2" class="headerlink" title="My Code:"></a>My Code:</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">checkPossibility</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; nums.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">			<span class="keyword">if</span> (nums[i - <span class="number">1</span>] &gt; nums[i]) &#123;</span><br><span class="line">				count++;</span><br><span class="line">				<span class="keyword">if</span> ((i &gt; <span class="number">1</span> &amp;&amp; i &lt; nums.<span class="built_in">size</span>() - <span class="number">1</span>) &amp;&amp; (nums[i + <span class="number">1</span>] &lt; nums[i - <span class="number">1</span>] &amp;&amp; nums[i<span class="number">-2</span>]&gt;nums[i])) &#123;</span><br><span class="line">					count++;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (count &lt;= <span class="number">1</span>) <span class="keyword">return</span> <span class="literal">true</span>; <span class="comment">// return可简化，见下面一段参考代码</span></span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>ps：这道题花了好长时间，提交失败了5次，才考虑到所有情况...到最后就比较混乱了。</p>
<h4 id="参考解析："><a href="#参考解析：" class="headerlink" title="参考解析："></a>参考解析：</h4><p>判断最多改变一个元素的情况下，是否能变成一个非递减序列。<br>即找到一个元素 （大于其后面的那个元素）<br>此时有两种情况<br>1、改变该元素才能成为非递减序列<br>2、改变该元素后面那个元素才能成为非递减序列<br>由这两个元素的外围元素大小比较决定</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">若nums[i-2] &gt; nums[i]</span><br><span class="line">令nums[i] &#x3D; nums[i-1];</span><br><span class="line">否则：nums[i-1] &#x3D; nums[i];</span><br></pre></td></tr></table></figure>

<p>这样对于后面的判断就不会有影响了。</p>
<h4 id="参考代码："><a href="#参考代码：" class="headerlink" title="参考代码："></a>参考代码：</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">checkPossibility</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//int tag = nums[0];</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; nums.<span class="built_in">size</span>(); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[i<span class="number">-1</span>] &gt; nums[i])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(i<span class="number">-2</span> &gt;= <span class="number">0</span> &amp;&amp; nums[i<span class="number">-2</span>] &gt; nums[i])</span><br><span class="line">                    nums[i] = nums[i<span class="number">-1</span>];</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    nums[i<span class="number">-1</span>] = nums[i];</span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count &lt;= <span class="number">1</span>; <span class="comment">// 简洁的return</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>



<h3 id="1343-Number-of-Sub-arrays-of-Size-K-and-Average-Greater-than-or-Equal-to-Threshold"><a href="#1343-Number-of-Sub-arrays-of-Size-K-and-Average-Greater-than-or-Equal-to-Threshold" class="headerlink" title="1343. Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold"></a><a href="https://leetcode-cn.com/problems/number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold/" target="_blank" rel="noopener">1343. Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold</a></h3><p><font color = orange >[medium]</font></p>
<p>Given an array of integers <code>arr</code> and two integers <code>k</code> and <code>threshold</code>.</p>
<p>Return <em>the number of sub-arrays</em> of size <code>k</code> and average greater than or equal to <code>threshold</code>.</p>
<p><strong>Example 1:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: arr &#x3D; [2,2,2,2,5,5,5,8], k &#x3D; 3, threshold &#x3D; 4</span><br><span class="line">Output: 3</span><br><span class="line">Explanation: Sub-arrays [2,5,5],[5,5,5] and [5,5,8] have averages 4, 5 and 6 respectively. All other sub-arrays of size 3 have averages less than 4 (the threshold).</span><br></pre></td></tr></table></figure>

<p><strong>Example 2:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: arr &#x3D; [1,1,1,1,1], k &#x3D; 1, threshold &#x3D; 0</span><br><span class="line">Output: 5</span><br></pre></td></tr></table></figure>

<p><strong>Example 3:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: arr &#x3D; [11,13,17,23,29,31,7,5,2,3], k &#x3D; 3, threshold &#x3D; 5</span><br><span class="line">Output: 6</span><br><span class="line">Explanation: The first 6 sub-arrays of size 3 have averages greater than 5. Note that averages are not integers.</span><br></pre></td></tr></table></figure>

<p><strong>Example 4:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: arr &#x3D; [7,7,7,7,7,7,7], k &#x3D; 7, threshold &#x3D; 7</span><br><span class="line">Output: 1</span><br></pre></td></tr></table></figure>

<p><strong>Example 5:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: arr &#x3D; [4,4,4,4], k &#x3D; 4, threshold &#x3D; 1</span><br><span class="line">Output: 1</span><br></pre></td></tr></table></figure>

<p><strong>Constraints:</strong></p>
<ul>
<li><code>1 &lt;= arr.length &lt;= 10^5</code></li>
<li><code>1 &lt;= arr[i] &lt;= 10^4</code></li>
<li><code>1 &lt;= k &lt;= arr.length</code></li>
<li><code>0 &lt;= threshold &lt;= 10^4</code></li>
</ul>
<h4 id="My-Code-3"><a href="#My-Code-3" class="headerlink" title="My Code:"></a>My Code:</h4><p>最初尝试：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">numOfSubarrays</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; arr, <span class="keyword">int</span> k, <span class="keyword">int</span> threshold)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">int</span> len = arr.<span class="built_in">size</span>();</span><br><span class="line">		<span class="keyword">if</span> (k &gt; len) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len - k + <span class="number">1</span>; i++) &#123;</span><br><span class="line">			<span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt; i + k; j++) &#123;</span><br><span class="line">				sum += arr[j];</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> (sum / k &gt;= threshold) &#123;</span><br><span class="line">				count++;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> count;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>时间复杂度为：O(n)，具体时间消耗：k*n，提交后显示 “时间超出限制”。</p>
<p>改进后：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">numOfSubarrays</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; arr, <span class="keyword">int</span> k, <span class="keyword">int</span> threshold)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> len = arr.<span class="built_in">size</span>();</span><br><span class="line">        </span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; i++) sum += arr[i];</span><br><span class="line">		<span class="keyword">if</span> (sum &gt;= threshold*k) count++;</span><br><span class="line">        <span class="comment">// 采用先算第一组，然后后面的sum依次减之前一个加最后一个</span></span><br><span class="line">        <span class="comment">// 可省去一个for循环</span></span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len - k; i++) &#123;</span><br><span class="line">			sum -= arr[i];</span><br><span class="line">			sum += arr[i + k];</span><br><span class="line">			<span class="keyword">if</span> (sum &gt;= threshold*k) count++;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> count;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>执行时间：196ms</p>
<p>将判断条件<code>sum &gt;= threshold*k</code> 改为 <code>sum / k &gt;= threshold</code>，执行时间为320ms。（可见乘法比除法的速度快不少）</p>
<h3 id="0015-3Sum"><a href="#0015-3Sum" class="headerlink" title="0015. 3Sum"></a><a href="https://leetcode-cn.com/problems/3sum/" target="_blank" rel="noopener">0015. 3Sum</a></h3><p><font color = orange >[medium]</font></p>
<p>Given an array <code>nums</code> of <em>n</em> integers, are there elements <em>a</em>, <em>b</em>, <em>c</em> in <code>nums</code> such that <em>a</em> + <em>b</em> + <em>c</em> = 0? Find all unique triplets in the array which gives the sum of zero.</p>
<p><strong>Note:</strong></p>
<p>The solution set must not contain duplicate triplets.</p>
<p><strong>Example:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Given array nums &#x3D; [-1, 0, 1, 2, -1, -4],</span><br><span class="line"></span><br><span class="line">A solution set is:</span><br><span class="line">[</span><br><span class="line">  [-1, 0, 1],</span><br><span class="line">  [-1, -1, 2]</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<h4 id="My-Code-4"><a href="#My-Code-4" class="headerlink" title="My Code:"></a>My Code:</h4><p>初次尝试：（暴力三重循环）</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; <span class="title">threeSum</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">		<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; ans;</span><br><span class="line">		<span class="keyword">int</span> len = nums.<span class="built_in">size</span>();</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; len; j++) &#123;</span><br><span class="line">				<span class="keyword">for</span> (<span class="keyword">int</span> k = j + <span class="number">1</span>; k &lt; len; k++) &#123;</span><br><span class="line">					<span class="keyword">if</span> (nums[i] + nums[j] + nums[k] == <span class="number">0</span>) &#123;</span><br><span class="line">						<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; subArr;</span><br><span class="line">						subArr.push_back(nums[i]);</span><br><span class="line">						subArr.push_back(nums[j]);</span><br><span class="line">						subArr.push_back(nums[k]);</span><br><span class="line">						sort(subArr.<span class="built_in">begin</span>(), subArr.<span class="built_in">end</span>());</span><br><span class="line">						<span class="keyword">if</span> (ans.<span class="built_in">size</span>()==<span class="number">0</span> ||(ans.<span class="built_in">size</span>() &gt; <span class="number">0</span> &amp;&amp; <span class="built_in">find</span>(ans.<span class="built_in">begin</span>(), ans.<span class="built_in">end</span>(), subArr) == ans.<span class="built_in">end</span>()))</span><br><span class="line">                            <span class="comment">// ==ans.end()是没找到，所以插入</span></span><br><span class="line">							ans.push_back(subArr);</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> ans;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>超时。</p>
<h4 id="参考解析：-1"><a href="#参考解析：-1" class="headerlink" title="参考解析："></a>参考解析：</h4><p>采用指针的方式。固定一个数，用双指针来查找另外两个数。</p>
<div align=center><img src="https://i.loli.net/2020/06/01/TCOVghxBflGPwDK.png" width="80%" height="80%"></div>

<p>根据这个思路，又写了如下代码：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; <span class="title">threeSum</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">		<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; ans;</span><br><span class="line">		sort(nums.<span class="built_in">begin</span>(), nums.<span class="built_in">end</span>());</span><br><span class="line">		<span class="keyword">if</span> (nums.<span class="built_in">size</span>() &lt; <span class="number">3</span>) <span class="keyword">return</span> ans;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.<span class="built_in">size</span>()<span class="number">-2</span>; i++) &#123;</span><br><span class="line">			<span class="keyword">if</span> (nums[i] &gt; <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">			<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;::iterator left = nums.<span class="built_in">begin</span>() + i + <span class="number">1</span>;</span><br><span class="line">			<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;::iterator right = nums.<span class="built_in">end</span>() - <span class="number">1</span>;			</span><br><span class="line">			<span class="keyword">while</span> (left &lt; right) &#123;</span><br><span class="line">				</span><br><span class="line">				<span class="keyword">int</span> sum = nums[i] + *left + *right;</span><br><span class="line">				<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; subArr;</span><br><span class="line">				<span class="keyword">if</span> (sum == <span class="number">0</span>) &#123;</span><br><span class="line">					subArr.push_back(nums[i]);</span><br><span class="line">					subArr.push_back(*left);</span><br><span class="line">					subArr.push_back(*right);</span><br><span class="line">					sort(subArr.<span class="built_in">begin</span>(), subArr.<span class="built_in">end</span>());</span><br><span class="line">					<span class="keyword">if</span> (ans.<span class="built_in">size</span>() == <span class="number">0</span> || (ans.<span class="built_in">size</span>() &gt; <span class="number">0</span> &amp;&amp; <span class="built_in">find</span>(ans.<span class="built_in">begin</span>(), ans.<span class="built_in">end</span>(), subArr) == ans.<span class="built_in">end</span>()))</span><br><span class="line">						<span class="comment">// ==ans.end()是没找到，所以插入</span></span><br><span class="line">						ans.push_back(subArr);</span><br><span class="line">					right--;</span><br><span class="line">					left++;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span> <span class="keyword">if</span> (sum &gt; <span class="number">0</span>)</span><br><span class="line">					right--;</span><br><span class="line">				<span class="keyword">else</span></span><br><span class="line">					left++;</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> ans;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>使用了迭代器，仍然超时。把迭代器换成普通数组下标，还是超出时间限制...</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; <span class="title">threeSum</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">		<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; ans;</span><br><span class="line">		sort(nums.<span class="built_in">begin</span>(), nums.<span class="built_in">end</span>());</span><br><span class="line">		<span class="keyword">int</span> len = nums.<span class="built_in">size</span>();</span><br><span class="line">		<span class="keyword">if</span> (nums.<span class="built_in">size</span>() &lt; <span class="number">3</span>) <span class="keyword">return</span> ans;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len<span class="number">-2</span>; i++) &#123;</span><br><span class="line">			<span class="keyword">if</span> (nums[i] &gt; <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">int</span> left =  i + <span class="number">1</span>;</span><br><span class="line">			<span class="keyword">int</span> right = len - <span class="number">1</span>;			</span><br><span class="line">			<span class="keyword">while</span> (left &lt; right) &#123;				</span><br><span class="line">				<span class="keyword">int</span> sum = nums[i] + nums[left] + nums[right];				</span><br><span class="line">				<span class="keyword">if</span> (sum == <span class="number">0</span>) &#123;</span><br><span class="line">					<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; subArr = &#123; nums[i], nums[left] , nums[right] &#125;;</span><br><span class="line">					sort(subArr.<span class="built_in">begin</span>(), subArr.<span class="built_in">end</span>());</span><br><span class="line">					<span class="keyword">if</span> (ans.<span class="built_in">size</span>() == <span class="number">0</span> || (ans.<span class="built_in">size</span>() &gt; <span class="number">0</span> &amp;&amp; <span class="built_in">find</span>(ans.<span class="built_in">begin</span>(), ans.<span class="built_in">end</span>(), subArr) == ans.<span class="built_in">end</span>()))</span><br><span class="line">						ans.push_back(subArr);</span><br><span class="line">					right--;</span><br><span class="line">					left++;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span> <span class="keyword">if</span> (sum &gt; <span class="number">0</span>)</span><br><span class="line">					right--;</span><br><span class="line">				<span class="keyword">else</span></span><br><span class="line">					left++;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> ans;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>



<h4 id="参考代码：-1"><a href="#参考代码：-1" class="headerlink" title="参考代码："></a>参考代码：</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Coding</category>
      </categories>
      <tags>
        <tag>[object Object]</tag>
      </tags>
  </entry>
  <entry>
    <title>Journal Articles Reading Report - Template</title>
    <url>/posts/journal-articles-reading-report-**/</url>
    <content><![CDATA[<blockquote>
<hr>
</blockquote>
<h2 id="1-ARTICLE-CONTENT"><a href="#1-ARTICLE-CONTENT" class="headerlink" title="1. ARTICLE CONTENT"></a>1. ARTICLE CONTENT</h2><h3 id="1-1-Aim-of-the-research"><a href="#1-1-Aim-of-the-research" class="headerlink" title="1.1 Aim of the research"></a>1.1 Aim of the research</h3><ul>
<li><h3 id="1-2-Main-points-amp-Supporting-arguments"><a href="#1-2-Main-points-amp-Supporting-arguments" class="headerlink" title="1.2 Main points &amp; Supporting arguments"></a>1.2 Main points &amp; Supporting arguments</h3></li>
<li></li>
</ul>
<h3 id="1-3-Characterization-methods"><a href="#1-3-Characterization-methods" class="headerlink" title="1.3 Characterization methods"></a>1.3 Characterization methods</h3><ul>
<li><h3 id="1-4-Mechanism"><a href="#1-4-Mechanism" class="headerlink" title="1.4 Mechanism"></a>1.4 Mechanism</h3></li>
<li></li>
</ul>
<h3 id="1-5-Nice-writing-expressions"><a href="#1-5-Nice-writing-expressions" class="headerlink" title="1.5 Nice writing expressions"></a>1.5 Nice writing expressions</h3><ul>
<li><h2 id="2-DEEP-THINKING"><a href="#2-DEEP-THINKING" class="headerlink" title="2. DEEP THINKING"></a>2. DEEP THINKING</h2></li>
</ul>
<h3 id="2-1-Unsolved-problems"><a href="#2-1-Unsolved-problems" class="headerlink" title="2.1 Unsolved problems"></a>2.1 Unsolved problems</h3><ul>
<li><h3 id="2-2-Enlightenment"><a href="#2-2-Enlightenment" class="headerlink" title="2.2 Enlightenment"></a>2.2 Enlightenment</h3></li>
<li></li>
</ul>
]]></content>
      <categories>
        <category>Paper-reading</category>
      </categories>
      <tags>
        <tag>TC4</tag>
        <tag>SLM</tag>
      </tags>
  </entry>
  <entry>
    <title>Pandora-Speaking</title>
    <url>/posts/pandora-speaking/</url>
    <content><![CDATA[<h1 id="0325-When-39-s-it-due"><a href="#0325-When-39-s-it-due" class="headerlink" title="0325. When&#39;s it due?"></a>0325. When&#39;s it due?</h1><p>什么时候截止？</p>
<p><strong>due (adj.) 到期的，截止的</strong></p>
<p>It&#39;s due tomorrow. 明天截止</p>
<p>有人在敲门，可以问：Who&#39;s it?</p>
<p><strong>be supposed to do sth. 本该做某事</strong></p>
<p><strong>keep a journal 写日记</strong></p>
<h2 id="1-Key-Points"><a href="#1-Key-Points" class="headerlink" title="1. Key Points"></a>1. Key Points</h2><p><strong>due (adj.) 预期的，预计的</strong></p>
<p><strong>be due to do sth. 预计什么时候做某事</strong></p>
<p>e.g. What time is the next bus due? 下一趟公交车什么时候来？</p>
<p>e.g. The next meeting <u>is due to be held</u> in three month&#39;s time. 下次会议预计在3个月后召开。</p>
<p><strong>sb. is due to arrive + time 某人预计什么</strong></p>
<p>What time <u>is</u> Minister Lee <u>due to arrive</u>? 李总理什么时候到？</p>
<p><strong>due (date) 预产期</strong></p>
<p>e.g. When&#39;s your <u>due date</u>? 预产期是什么时候？</p>
<p><strong>due (adj.) 账单应付的，欠债的</strong></p>
<p>e.g. And our rent is due yesterday. 我们的房租昨天就该付了</p>
<p>e.g. When&#39;s the rent due? 什么时候交房租？</p>
<p>e.g. The rent is due at the end of the month. 房租在月底交付。</p>
<p><strong>paycheck (n.) 工资，薪水</strong></p>
<h2 id="2-Extended-Expressions"><a href="#2-Extended-Expressions" class="headerlink" title="2. Extended Expressions"></a>2. Extended Expressions</h2><p><strong>have a deadline. 赶着做某事</strong></p>
<p><strong>deal with a deadline.  赶着做某事（强烈）</strong></p>
<p>e.g. We are dealing with an impossible deadline. 我们有着难以达成的截止日期。</p>
<p><strong>miss the cutoff. 错过截止时间</strong></p>
<p>I missed the last bus. 我错过了末班车。</p>
<p><strong>expire (v.) 过期，到期，失效</strong></p>
<p>e.g. My passport expires next month. 我的护照下个月就要过期了。</p>
<h2 id="3-Review"><a href="#3-Review" class="headerlink" title="3. Review"></a>3. Review</h2><p>When&#39;s it due?</p>
<p>It&#39;s due tomorrow.</p>
<p>What time is the next bus due?</p>
<p>When&#39;s your due date?</p>
<p>And our rent is due... yesterday.</p>
<p>Your mom has a deadline.</p>
<p>We are dealing with an impossible deadline.</p>
<p>You missed the cutoff.</p>
<p>I hope it hasn&#39;t expired.</p>
<h1 id="0326-Tell-me-a-bit-about-yourself"><a href="#0326-Tell-me-a-bit-about-yourself" class="headerlink" title="0326. Tell me a bit about yourself."></a>0326. Tell me a bit about yourself.</h1><p>介绍下你自己。</p>
<p>Tell me about that person. 跟我说说那个人。</p>
<p>I&#39;ll tell you all about it. 我会把这件事原原本本告诉你。</p>
<p>Just tell me the truth. 告诉我真相。</p>
<p>I&#39;ll tell you something. 我跟你说。/听我说。（强调接下来的话）</p>
<h2 id="1-Key-Points-1"><a href="#1-Key-Points-1" class="headerlink" title="1. Key Points"></a>1. Key Points</h2><p><strong>a bit 时间上的一会儿 / 空间上的一小段距离</strong></p>
<p>I&#39;m just going out for <u>a bit</u>. See you later. 我出去下，等会见。</p>
<p>Can you move up <u>a bit</u>? 请你挪过去一点儿好吗？</p>
<p><strong>tell sb. a bit / little about myself 向某人介绍自己</strong></p>
<p><strong>sth. is my passion 我非常喜欢某事</strong></p>
<p>Magazines <u>are my passion</u>, ever since I was a kid. 我从小就很喜欢看杂志。</p>
<p>Teaching <u>is my great passion</u>. 我很喜欢教书。</p>
<p><strong>know sth. inside (and) out 非常了解某物</strong></p>
<p>I <u>know</u> most of your company <u>inside out</u>. 我非常了解贵公司。</p>
<p><strong>all I really want is ... 我只想要...</strong></p>
<p>e.g. <u>All I really want is</u> a chance or a position in your company. 我真心希望贵公司能给我一次机会，给我一份工作。</p>
<h2 id="2-Extended-Expressions-1"><a href="#2-Extended-Expressions-1" class="headerlink" title="2. Extended Expressions"></a>2. Extended Expressions</h2><p><strong>Where do you see yourself in XX years? 你觉着自己XX年后会处在什么位置？/ 未来XX年，你的职业规划是什么？</strong></p>
<p>e.g. Where do you see yourself in three years? 未来三年，你的职业规划是什么？</p>
<p>I want to be the best and work for a company where I can build a career. 我想要成为精英，并且希望公司成为我搭建这个事业上的平台。</p>
<p>Why do you want this job? 你为什么想要这份工作？</p>
<p>Because this is not just a job to me. This is what I love, this is what I&#39;m good at.  因为对我来说，这不仅仅是一份工作，这是我的兴趣所在，也是我所擅长的。</p>
<p>Do you have any questions for us? 你有问题要问我们吗？</p>
<p>None that I can think of. 没有问题。</p>
<h2 id="3-Review-1"><a href="#3-Review-1" class="headerlink" title="3. Review"></a>3. Review</h2><p>Tell me a bit about yourself.</p>
<p>I thought I could tell you a little about myself.</p>
<p>I know most of your company inside out.</p>
<p>Where do you see yourself in 10 years?</p>
<p>I want to be the best and work for a company where I can build a career.</p>
<p>Why do you want this job?</p>
<p>Because this is not just a job to me, this is what I love. This is what I&#39;m good at.</p>
<p>Do you have any questions for us?</p>
<p>None that I can think of.</p>
<h1 id="0327-When-39-s-this-rain-gonna-let-up"><a href="#0327-When-39-s-this-rain-gonna-let-up" class="headerlink" title="0327. When&#39;s this rain gonna let up?"></a>0327. When&#39;s this rain gonna let up?</h1><p>雨什么时候才停？</p>
<h2 id="1-Key-Points-2"><a href="#1-Key-Points-2" class="headerlink" title="1. Key Points"></a>1. Key Points</h2><p><strong>be gonna do sth. 将要做某事</strong></p>
<p>What are you gonna do? 你要去做什么？</p>
<p>I&#39;m gonna hang out. 我要去闲逛。</p>
<p>e.g. You<u>&#39;re gonna</u> ask him to New Year&#39;s (day). You<u>&#39;re gonna</u> break the pact. 你要邀请他共度新年。你要毁约，抛弃我们。</p>
<p><strong>break the pact 打破约定</strong></p>
<p><strong>let up 改善，好转，停止</strong></p>
<p>e.g. When the rain <u>lets up</u>, we&#39;ll go for a walk. 等雨一停我们就出去散步。</p>
<p>How many times do I have to ask you to throw away your empty bottles after you&#39;re done with them? 我说过多少遍了，要你喝完饮料把空瓶子扔出去？</p>
<p>Will you <u>let up</u>? I&#39;m doing something important here! 你能消停会儿吗？我正在做重要的工作！</p>
<p>What&#39;s going on with that leg? 你的腿怎么了？</p>
<p>Pain won&#39;t <u>let up</u>. 一直很疼。</p>
<p>But how can I <u>let up</u> now when I am so close? 但我怎能在马上成功时半途而废呢？</p>
<p>Looks like the rain has <u>let up some</u>. You<u>&#39;d best</u> hurry. 看起来雨好像停了，你最好快点。</p>
<p><strong>let up some 雨小了一点，雨停了</strong></p>
<p><strong>had best do sth. 最好做某事</strong></p>
<h2 id="2-Extended-Expressions-2"><a href="#2-Extended-Expressions-2" class="headerlink" title="2. Extended Expressions"></a>2. Extended Expressions</h2><p>Tomorrow is gonna be <u>a scorcher</u>. 明天将会是一个大热天。</p>
<p><strong>a scorcher （一个）大热天</strong></p>
<p>It&#39;s a bit <u>nippy</u>. 有点寒风刺骨。</p>
<p><strong>nippy (adj.) 寒冷的（令人感到不舒服的冷）</strong></p>
<p>It&#39;s a little <u>nippy</u> today - you might need a coat. 今天有点冷，你可能得加件外套。</p>
<p>I &#39;m <u>soaking wet</u> - I got caught in a <u>downpour</u>. 我全身湿透了，刚淋了一场<u>倾盆大雨</u>。</p>
<p><strong>soaking wet 全身湿透</strong></p>
<p>It&#39;s raining cats and dogs. 暴雨倾盆。</p>
<h2 id="3-Review-2"><a href="#3-Review-2" class="headerlink" title="3. Review"></a>3. Review</h2><p>When&#39;s this rain gonna let up?</p>
<p>This one looks like a scorcher.</p>
<p>It&#39;s a bit nippy.</p>
<p>I&#39;m soaking wet - I got caught in a downpour.</p>
<p>It&#39;s raining cats and dogs.</p>
<h1 id="0328-You-39-re-a-real-pain-in-the-neck-you-konw"><a href="#0328-You-39-re-a-real-pain-in-the-neck-you-konw" class="headerlink" title="0328. You&#39;re a real pain in the neck, you konw?"></a>0328. You&#39;re a real pain in the neck, you konw?</h1><p>你真让人头大。</p>
<h2 id="1-Key-Points-3"><a href="#1-Key-Points-3" class="headerlink" title="1. Key Points"></a>1. Key Points</h2><p><strong>sth. / sb. is a real sth. 某物 / 某人真……</strong></p>
<p>Lily is a real pleasure to work with. 和Lily一起工作真舒服。</p>
<p>She&#39;s always been a real jerk. 她一直很讨厌。</p>
<p><strong>pain in the neck 给你带来麻烦的人</strong></p>
<p>A noisy student is a pain in the neck for a teacher. 对老师来说上课吵闹的学生很讨厌。</p>
<p><strong>you know 表示对一个讨厌的人忍无可忍</strong></p>
<p>You&#39;re a real jerk, you konw？你真的非常令人讨厌。</p>
<p>What the heck have you been doing? 你搞什么鬼？你怎么回事？</p>
<p><strong>a neat guy 某人看上去不错</strong>（用于夸奖）</p>
<p>He seems like a neat guy. 他看上去不错。</p>
<h2 id="2-Extended-Expressions-3"><a href="#2-Extended-Expressions-3" class="headerlink" title="2. Extended Expressions"></a>2. Extended Expressions</h2><p><strong>fly-by-night 不靠谱的，没信用的</strong></p>
<p>There are so many fly-by-night life coaches. 不靠谱的人生导师太多了。</p>
<p><strong>lame (adj.) 跛脚的，一瘸一拐的，差劲的，很烂的</strong></p>
<p>The movie was so lame. 这电影很差劲。</p>
<p><strong>lousy (adj.) 非常糟糕的</strong></p>
<p>That&#39;s a lousy conversation starter. 这开场白烂透了。</p>
<h2 id="3-Review-3"><a href="#3-Review-3" class="headerlink" title="3. Review"></a>3. Review</h2><p>You&#39;re a real pain in the neck, you know?</p>
<p>There are so many fly-by-night life coaches.</p>
<p>You&#39;re lame.</p>
<p>That&#39;s a lousy conversation starter.</p>
<h1 id="0329-It-39-s-such-a-waste-of-time"><a href="#0329-It-39-s-such-a-waste-of-time" class="headerlink" title="0329. It&#39;s such a waste of time."></a>0329. It&#39;s such a waste of time.</h1><p>简直就是浪费时间。</p>
<h2 id="1-Key-Points-4"><a href="#1-Key-Points-4" class="headerlink" title="1. Key Points"></a>1. Key Points</h2><p><strong>sb. / sth. is such a ... 某人/某物 真是...</strong></p>
<p>That&#39;s such a good film. 那部电影真不错。</p>
<p><strong>work it all out 想办法解决</strong></p>
<p>Our supplies are just about gone. 我们的补给就要用完了</p>
<p>I will work it all out. 我会想办法解决的</p>
<p>……cheerful, optimistic, indomitable. I assure you <strong>no such man exists</strong>. 爽朗、乐观、不屈不挠的人，我敢打赌，不存在这样的人。</p>
<p>What a <strong>complete and utter</strong> waste of my time. 这<strong>完全</strong>是浪费我时间。</p>
<p>That was a waste of time, I&#39;m such an idiot.</p>
<h2 id="2-Extended-Expressions-4"><a href="#2-Extended-Expressions-4" class="headerlink" title="2. Extended Expressions"></a>2. Extended Expressions</h2><p><strong>kill time 打发时间，消磨时间</strong></p>
<p>We killed time playing cards. 我们打纸牌消磨时间。</p>
<p><strong>fritter away 挥霍浪费（时间、金钱或机会）</strong></p>
<p>Don&#39;t fritter away your time with manicures or hairdressers. 别把时间浪费在做指甲或做头发上。</p>
<p>He frittered away the millions his father had left him. 他挥霍了父亲留下的百万资产</p>
<h2 id="3-Review-4"><a href="#3-Review-4" class="headerlink" title="3. Review"></a>3. Review</h2><p>It&#39;s such a waste of time.</p>
<p>You&#39;re such a dreamer.</p>
<p> I assure you no such man exists.</p>
<p>What a complete and utter waste of my time.</p>
<p>That was a waste of time, I&#39;m such an idiot.</p>
<p>He frittered away the millions his father had left him.</p>
<h1 id="0330-Wow-What-a-big-boy"><a href="#0330-Wow-What-a-big-boy" class="headerlink" title="0330. Wow. What a big boy!"></a>0330. Wow. What a big boy!</h1><p>哇，简直像个小大人儿！</p>
<h2 id="1-Key-Points-5"><a href="#1-Key-Points-5" class="headerlink" title="1. Key Points"></a>1. Key Points</h2><p>What a ... 太...</p>
<p>What a gentleman! Thank you very much. 真是一位绅士！非常感谢。</p>
<p>What a mess! Put everything in order right now! 太乱了！马上把所有东西收拾好！</p>
<p>You are a big boy now, Jack. 你已经可以独当一面了，杰克。</p>
<h2 id="2-Extended-Expressions-5"><a href="#2-Extended-Expressions-5" class="headerlink" title="2. Extended Expressions"></a>2. Extended Expressions</h2><p>Thumbs up! 给你点赞！</p>
<p>You&#39;re all grown up. 都长大成人了。</p>
<h2 id="3-Review-5"><a href="#3-Review-5" class="headerlink" title="3. Review"></a>3. Review</h2><p>Wow. What a big boy!</p>
<p>Wow, really? That&#39;s hard to believe.</p>
<p>What a surprise!</p>
<p>You are a big boy now, Jack.</p>
<p>Thumbs up!</p>
<p>Well done.</p>
<h1 id="0331-You-sound-horrible"><a href="#0331-You-sound-horrible" class="headerlink" title="0331. You sound horrible!"></a>0331. You sound horrible!</h1><p>听起来你病得挺重的。</p>
<h2 id="1-Key-Points-6"><a href="#1-Key-Points-6" class="headerlink" title="1. Key Points"></a>1. Key Points</h2><p>sb sounds + adj. 说话声音听起来...</p>
<p>His voice sounded strange <strong>on the phone</strong>. 他的声音在电话里听着很怪。</p>
<h2 id="2-Extended-Expressions-6"><a href="#2-Extended-Expressions-6" class="headerlink" title="2. Extended Expressions"></a>2. Extended Expressions</h2><h2 id="3-Review-6"><a href="#3-Review-6" class="headerlink" title="3. Review"></a>3. Review</h2><h1 id="0531-Think-of-this-as-an-opportunity"><a href="#0531-Think-of-this-as-an-opportunity" class="headerlink" title="0531. Think of this as an opportunity"></a>0531. Think of this as an opportunity</h1><h2 id="1-Key-Points-7"><a href="#1-Key-Points-7" class="headerlink" title="1. Key Points"></a>1. Key Points</h2><p>think of sth as sth. 把某事当作另外一种给不同的事看待。</p>
<p>I don&#39;t want you think of me as some sort of authority figure. 业界的权威人士</p>
<h2 id="2-Extended-Expressions-7"><a href="#2-Extended-Expressions-7" class="headerlink" title="2. Extended Expressions"></a>2. Extended Expressions</h2><p>You have to see your opportunity and take it. 你得看到机会，抓住机会。</p>
<p>I&#39;d like to take this opportunity to thank you for all your help. 我要借此机会对你们的帮助表示感谢。</p>
<p>seize/grab the chance  抓住机会</p>
<p><u>jump at</u> the chance 抓住机会</p>
<p>If she needs anything, go for it. See the shot and take it. 对她有求必应，看到机会，抓住机会。</p>
<h1 id="0000-Title"><a href="#0000-Title" class="headerlink" title="0000. Title"></a>0000. Title</h1><h2 id="1-Key-Points-8"><a href="#1-Key-Points-8" class="headerlink" title="1. Key Points"></a>1. Key Points</h2><h2 id="2-Extended-Expressions-8"><a href="#2-Extended-Expressions-8" class="headerlink" title="2. Extended Expressions"></a>2. Extended Expressions</h2>]]></content>
      <categories>
        <category>English</category>
      </categories>
      <tags>
        <tag>english</tag>
      </tags>
  </entry>
  <entry>
    <title>Go语言学习</title>
    <url>/posts/go-study/</url>
    <content><![CDATA[<p>注：整理自：<a href="https://www.liwenzhou.com/" target="_blank" rel="noopener">李文周的博客</a></p>
<hr>
<h2 id="第一个Go程序"><a href="#第一个Go程序" class="headerlink" title="第一个Go程序"></a>第一个Go程序</h2><h3 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h3><p>现在我们来创建第一个Go项目——<code>hello</code>。在我们桌面创建一个<code>hello</code>目录。</p>
<p>在该目录中创建一个<code>main.go</code>文件：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main  <span class="comment">// 声明 main 包，表明当前是一个可执行程序</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span>  <span class="comment">// 导入内置 fmt 包</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;  <span class="comment">// main函数，是程序执行的入口</span></span><br><span class="line">	fmt.Println(<span class="string">"Hello World!"</span>)  <span class="comment">// 在终端打印 Hello World!</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="go-build"><a href="#go-build" class="headerlink" title="go build"></a>go build</h3><p><code>go build</code>表示将源代码编译成可执行文件。</p>
<p>在hello目录下执行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">go build</span><br></pre></td></tr></table></figure>

<p>或者在其他目录执行以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">go build hello</span><br></pre></td></tr></table></figure>

<p>go编译器会去 <code>GOPATH</code>的src目录下查找你要编译的<code>hello</code>项目</p>
<p>编译得到的可执行文件会保存在执行编译命令的当前目录下，如果是windows平台会在当前目录下找到<code>hello.exe</code>可执行文件。</p>
<p>可在终端直接执行该<code>hello.exe</code>文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">c:\desktop\hello&gt;hello.exe</span><br><span class="line">Hello World!</span><br></pre></td></tr></table></figure>

<p>我们还可以使用<code>-o</code>参数来指定编译后得到的可执行文件的名字。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">go build -o heiheihei.exe</span><br></pre></td></tr></table></figure>

<h3 id="go-install"><a href="#go-install" class="headerlink" title="go install"></a>go install</h3><p><code>go install</code>表示安装的意思，它先编译源代码得到可执行文件，然后将可执行文件移动到<code>GOPATH</code>的bin目录下。因为我们的环境变量中配置了<code>GOPATH</code>下的bin目录，所以我们就可以在任意地方直接执行可执行文件了。</p>
<h3 id="跨平台编译"><a href="#跨平台编译" class="headerlink" title="跨平台编译"></a>跨平台编译</h3><p>默认我们<code>go build</code>的可执行文件都是当前操作系统可执行的文件，如果我想在windows下编译一个linux下可执行文件，那需要怎么做呢？</p>
<p>只需要指定目标操作系统的平台和处理器架构即可：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">SET CGO_ENABLED=0  // 禁用CGO</span><br><span class="line">SET GOOS=linux  // 目标平台是linux</span><br><span class="line">SET GOARCH=amd64  // 目标处理器架构是amd64</span><br></pre></td></tr></table></figure>

<p><em>使用了cgo的代码是不支持跨平台编译的</em></p>
<p>然后再执行<code>go build</code>命令，得到的就是能够在Linux平台运行的可执行文件了。</p>
<p>Mac 下编译 Linux 和 Windows平台 64位 可执行程序：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build</span><br><span class="line">CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build</span><br></pre></td></tr></table></figure>

<p>Linux 下编译 Mac 和 Windows 平台64位可执行程序：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build</span><br><span class="line">CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build</span><br></pre></td></tr></table></figure>

<p>Windows下编译Mac平台64位可执行程序：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">SET CGO_ENABLED=0</span><br><span class="line">SET GOOS=darwin</span><br><span class="line">SET GOARCH=amd64</span><br><span class="line">go build</span><br></pre></td></tr></table></figure>

<h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><p>Go语言中</p>
<ul>
<li>字符串是 &quot;双引号&quot; 包裹的；</li>
<li>字符是 &#39;单引号&#39; 包裹的。</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">s := <span class="string">"hello，你好~"</span></span><br><span class="line">c1 := <span class="string">'h'</span></span><br><span class="line">c2 := <span class="string">'你'</span></span><br><span class="line"><span class="comment">// 字节：1字节=8Bit（8个二进制位）</span></span><br><span class="line"><span class="comment">// 1个字符'A'= 1个字节</span></span><br><span class="line"><span class="comment">// 1个utf-8编码的汉字'你'=一般占3个字节（某些生僻字占4个）</span></span><br></pre></td></tr></table></figure>

<h3 id="byte类型和rune类型"><a href="#byte类型和rune类型" class="headerlink" title="byte类型和rune类型"></a>byte类型和rune类型</h3><p>Go 语言的字符有以下两种：</p>
<ol>
<li><code>uint8</code>类型，或者叫 byte 型，代表了<code>ASCII码</code>的一个字符。</li>
<li><code>rune</code>类型，代表一个 <code>UTF-8字符</code>。</li>
</ol>
<p>当需要处理中文、日文或者其他复合字符时，则需要用到<code>rune</code>类型。<strong><code>rune</code>类型实际是一个<code>int32</code></strong>。</p>
<h3 id="字符串的常用操作"><a href="#字符串的常用操作" class="headerlink" title="字符串的常用操作"></a>字符串的常用操作</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">s1 := <span class="string">"hello"</span></span><br><span class="line">s2 := <span class="string">"world"</span></span><br><span class="line">result := fmt.Sprintf(<span class="string">"%s%s"</span>, s1, s2)</span><br><span class="line">fmt.Printf(<span class="string">"%s%s"</span>, s1, s2)</span><br><span class="line">fmt.Println(result)</span><br></pre></td></tr></table></figure>

<p>fmt.Sprintf()会将拼接后的字符串返回，不打印；</p>
<p>fmt.Printf()会直接打印出拼接后的字符串</p>
<table>
<thead>
<tr>
<th align="left">方法</th>
<th align="left">介绍</th>
</tr>
</thead>
<tbody><tr>
<td align="left">len(str)</td>
<td align="left">求长度</td>
</tr>
<tr>
<td align="left">+ 或 fmt.Sprintf</td>
<td align="left">拼接字符串</td>
</tr>
<tr>
<td align="left">strings.Split</td>
<td align="left">分割</td>
</tr>
<tr>
<td align="left">strings.contains</td>
<td align="left">判断是否包含</td>
</tr>
<tr>
<td align="left">strings.HasPrefix,strings.HasSuffix</td>
<td align="left">前缀/后缀判断</td>
</tr>
<tr>
<td align="left">strings.Index(),strings.LastIndex()</td>
<td align="left">子串出现的位置</td>
</tr>
<tr>
<td align="left">strings.Join(a[]string, sep string)</td>
<td align="left">join操作</td>
</tr>
</tbody></table>
<h3 id="修改字符串"><a href="#修改字符串" class="headerlink" title="修改字符串"></a>修改字符串</h3><p>Go语言中的字符串不能直接修改。</p>
<p>要修改字符串，需要先将其转换成<code>[]rune</code>或<code>[]byte</code>，完成后再转换为<code>string</code>。无论哪种转换，都会重新分配内存，并复制字节数组。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">changeString</span><span class="params">()</span></span> &#123;</span><br><span class="line">	s1 := <span class="string">"big"</span></span><br><span class="line">	<span class="comment">// 强制类型转换</span></span><br><span class="line">	byteS1 := []<span class="keyword">byte</span>(s1)</span><br><span class="line">	byteS1[<span class="number">0</span>] = <span class="string">'p'</span></span><br><span class="line">	fmt.Println(<span class="keyword">string</span>(byteS1))</span><br><span class="line"></span><br><span class="line">	s2 := <span class="string">"白萝卜"</span></span><br><span class="line">	runeS2 := []<span class="keyword">rune</span>(s2) <span class="comment">// 把字符串强制转换成一个rune切片</span></span><br><span class="line">	runeS2[<span class="number">0</span>] = <span class="string">'红'</span></span><br><span class="line">	fmt.Println(<span class="keyword">string</span>(runeS2))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><p>三种初始化方法：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1. 列表初始化</span></span><br><span class="line">a1 := [<span class="number">3</span>]<span class="keyword">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>&#125;</span><br><span class="line">fmt.Println(a1) <span class="comment">//[1 2 0]</span></span><br><span class="line"><span class="comment">// 2. 根据初始值自动推断数组的长度是多少</span></span><br><span class="line">a2 := [...]<span class="keyword">int</span>&#123;<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>&#125;</span><br><span class="line"><span class="comment">// 3. 根据索引初始化</span></span><br><span class="line">a3 := [...]<span class="keyword">int</span>&#123;<span class="number">1</span>: <span class="number">1</span>, <span class="number">3</span>: <span class="number">5</span>&#125;</span><br><span class="line">fmt.Println(a3) <span class="comment">// [0 1 0 5]</span></span><br></pre></td></tr></table></figure>

<h2 id="切片"><a href="#切片" class="headerlink" title="切片"></a>切片</h2><h3 id="切片的本质"><a href="#切片的本质" class="headerlink" title="切片的本质"></a>切片的本质</h3><p>切片的本质就是对底层数组的封装，它包含了三个信息：底层数组的指针、切片的长度（len）和切片的容量（cap）。</p>
<p>举个例子，现在有一个数组<code>a := [8]int{0, 1, 2, 3, 4, 5, 6, 7}</code>，切片<code>s1 := a[:5]</code>，相应示意图如下。<img src="https://www.liwenzhou.com/images/Go/slice/slice_01.png" alt="slice_01">切片<code>s2 := a[3:6]</code>，相应示意图如下：<img src="https://www.liwenzhou.com/images/Go/slice/slice_02.png" alt="slice_02"></p>
<p>总结：</p>
<ul>
<li>切片的本质就是一个框，框住了一块连续的内存。</li>
<li>切片是引用类型，指向了一个底层的数组；</li>
<li>切片的长度就是它元素的个数；</li>
<li>切片的容量是底层数组从<strong>切片的第一个元素</strong>到最后一个元素的数量。</li>
</ul>
<h3 id="判断切片是否为空"><a href="#判断切片是否为空" class="headerlink" title="判断切片是否为空"></a>判断切片是否为空</h3><p>要检查切片是否为空，请始终使用<code>len(s) == 0</code>来判断，而不应该使用<code>s == nil</code>来判断。</p>
]]></content>
      <categories>
        <category>Coding</category>
      </categories>
      <tags>
        <tag>golang</tag>
      </tags>
  </entry>
  <entry>
    <title>全球通史（摘录）</title>
    <url>/posts/a-global-history/</url>
    <content><![CDATA[<h1 id="第一章-人类-食物采集者"><a href="#第一章-人类-食物采集者" class="headerlink" title="第一章 人类-食物采集者"></a>第一章 人类-食物采集者</h1><p>在史前时代的几百万年中，有两大转变为此后的全部历史奠定了坚实的基础：</p>
<ul>
<li>灵长类逐渐转变为人类，即具有思维能力的真正的人类；</li>
<li>人类的祖先从坐享大自然恩赐的食物采集者转变为日益摆脱大自然的束缚、掌握自己命运的食物生产者。</li>
</ul>
<h2 id="1-1-类人猿到人类"><a href="#1-1-类人猿到人类" class="headerlink" title="1.1 类人猿到人类"></a>1.1 类人猿到人类</h2><p>人类作为一个种群所面临的问题是：</p>
<ul>
<li>如何使<strong>自身不断增长的知识</strong>与<strong>运用这些知识的智慧</strong>保持平衡。</li>
</ul>
<p>学会如何平衡知识和智慧正成为一个非常紧迫的问题，以至正如爱因斯坦所警告的那样，人类作为一个种群的未来取决于这种平衡的结果。这一平衡问题已在人类历史上反复出现，并且在今天，由于我们的智慧无法赶上人类日益增长的知识而出现得更为频繁、更为迫切。</p>
<h2 id="1-2-食物采集者的生活"><a href="#1-2-食物采集者的生活" class="headerlink" title="1.2 食物采集者的生活"></a>1.2 食物采集者的生活</h2><p>无论使澳大利亚的土著，还是举着在南非卡拉哈里沙漠中的亢人，现代食物采集者的食物供应的充足程度令人惊讶，且有保障。他们能用近500种不同种类的动植物做食物、药品、化妆品、毒药或其他用品。</p>
<p>亢人和其他食物采集者的食物供应不但是充裕的，而且于健康有益。这些食品都只含有少量的盐分、饱和脂肪和碳水化合物，而富含多价非饱和脂肪、粗纤维成分、维生素和矿物质。食物采集者长年享用这些健康食品，再加上他们作为游牧部落民过着充满运动的生活，所以他们很少患上诸如高血压、肥胖症、静脉曲张、溃疡、大肠炎之类工业社会常见病。另一方面，许多亢人又因缺医少药、得不到治疗而死于意外伤害。因此，<strong>科学家发现，活过60岁的亢人约占其总人数的十分之一，这与卫生设施一应俱全的工业国家的比例大致相等。</strong></p>
<p>……比起欧洲的文明居民，无疑他们过着更为快乐的生活……一年四季，没有什么事情使加利福尼亚人（1760年左右生活在加利福尼亚的印第安人）感到麻烦或苦恼，也没有什么东西使他觉得生活艰难或活着没意思……嫉妒、猜疑和诽谤不会扰乱他们的生活，他也用不着担心他会失去他所拥有的东西，当然也不必想着如何增加自己拥有的物质财富……<strong>加利福尼亚人不知道“我的”和“你的”这两个词的意思，按圣格列高利（St.Gregory）的说法，这两个词是我们短暂的一生充满了痛苦和无法解释的罪恶。</strong></p>
<h1 id="第二章-人类-食物生产者"><a href="#第二章-人类-食物生产者" class="headerlink" title="第二章 人类-食物生产者"></a>第二章 人类-食物生产者</h1><h2 id="2-2-农业的传播"><a href="#2-2-农业的传播" class="headerlink" title="2.2 农业的传播"></a>2.2 农业的传播</h2><p>现代的小麦、燕麦、裸麦和大麦，以及现代的山羊、绵羊、牛和猪均起源于<strong>中东</strong>。玉米、蚕豆和南瓜之类起源于中美洲。</p>
<h1 id="第三章-最初的亚欧大陆文明"><a href="#第三章-最初的亚欧大陆文明" class="headerlink" title="第三章 最初的亚欧大陆文明"></a>第三章 最初的亚欧大陆文明</h1><h2 id="3-3-古代文明的类型"><a href="#3-3-古代文明的类型" class="headerlink" title="3.3 古代文明的类型"></a>3.3 古代文明的类型</h2><p>印度河：印度河文明衰落的起因和详情尚不清楚，因为人们迄今未能释读印度河流域的文字。印度河流域的文字为象形文字，上一行由左往右读，下一行由右往左读。这种写法也为早期希腊人所效仿，被称为“由左而右，复由右而左交互成行之书法”——“就像牛犁耕地一样”。</p>
<p>商朝：约公元前1500年前后建立商朝的入侵者学习和掌握了<strong>中东人发明的种植小麦、冶铸青铜武器和制造马拉战车的技术</strong>。在商朝废墟中发现的复杂的表意文字，对中国和整个东亚后来的历史极为重要。它时现代汉字的直系祖先；这一点也可用来说明中国文明的连续性。几千年来，中东人一直不能释读他们祖先的象形文字和楔形文字，而现代中国人却能读通商朝文字。</p>
<p>约公元前1500年前后，手执青铜武器的战车兵也入侵了遥远的中国北部的黄河流域。在那里，他们发现了商文明这种繁盛的新石器时代的文化；他们为商文明做出了自己的贡献，但也为商文明所同化。在中国，真实的情况始终是，这些入侵并没有引起与中国文化历史的彻底决裂，而在希腊和印度，情况则正好相反。</p>
<h1 id="第四章-古典文明开启欧亚大陆整体化"><a href="#第四章-古典文明开启欧亚大陆整体化" class="headerlink" title="第四章 古典文明开启欧亚大陆整体化"></a>第四章 古典文明开启欧亚大陆整体化</h1><h2 id="4-1-整体化的根源"><a href="#4-1-整体化的根源" class="headerlink" title="4.1 整体化的根源"></a>4.1 整体化的根源</h2><p>技术进步是新的欧亚大陆整体化的基础。<strong>从人类历史真正开始之日起，人类的活动范围就一直取决于其技术水平。</strong>在人来处于食品采集阶段时，人类各群体的活动范围仅限于其狩猎场所；当人类学会农业、冶金术和造船技术时，活动范围就扩大了。到了古典时代，技术进一步发展，使农业和文明的扩展大大超越过去，因而，有了地区性的帝国，这些帝国继续扩大自己的疆域，彼此邻接起来，横贯欧亚大陆。这时的技术进步主要表现为铁的发明及其日益广泛的使用。</p>
]]></content>
      <categories>
        <category>History</category>
      </categories>
      <tags>
        <tag>history</tag>
      </tags>
  </entry>
  <entry>
    <title>学点儿经济名词</title>
    <url>/posts/economy-phrases/</url>
    <content><![CDATA[<h2 id="股市相关"><a href="#股市相关" class="headerlink" title="股市相关"></a>股市相关</h2><ul>
<li><p><strong>牛市</strong>：预料股市行情看涨，前景乐观的专门术语。</p>
</li>
<li><p><strong>熊市</strong>：预料股市行情看跌，前景悲观的专门术语。</p>
</li>
<li><p><strong>价格倒挂</strong>：商品的成本或收购价格高于销售价格。</p>
</li>
<li><p><strong>放水</strong>：央行就像一个鱼缸上面的水龙头，社会经济就是这个鱼缸，而企业和个人，就是活在鱼缸里面的鱼。水快枯竭了鱼都要死了，赶紧放点水；大家活得都还不错，那就少放点；眼看着鱼缸的水都要溢出来了，那就干脆拧紧龙头，免得鱼缸爆了。</p>
</li>
<li><p><strong>杠杆</strong>：是以一个特定的比例放大投资结果的工具。将借到的货币追加到用于投资的现有资金上。杠杆率，资产与银行资本的比率。</p>
<blockquote>
<p>杠杆交易在证券、外汇、贵金属交易市场以及期货市场等均有出现。杠杆是一种“以小博大”的投资，投资者以自有资金作为担保，利用保证金制度，通过杠杆达成资金放大的目的。使用杠杆能放大收益，同时也能放大亏损。</p>
</blockquote>
</li>
<li><p><strong>对冲基金</strong>：采用（超额）收益来抵消投资损失这种策略的基金，即“风险对冲过的基金”，也可称为避险基金或套期保值基金。</p>
<blockquote>
<p>由于其对冲策略复杂和相关制度的缺失，对冲基金在我国并不多见，但在国外却比较普遍，像耳熟能详的索罗斯“量子基金”、 罗伯特森“老虎基金”和桥水基金等，都是国际著名的对冲基金。</p>
</blockquote>
</li>
<li><p><strong>黄金ETF</strong>（Exchange Traded Fund）：是指绝大部分基金财产以黄金为基础资产进行投资，紧密跟踪黄金价格，并在证券交易所上市的开放式基金。</p>
</li>
<li><p><strong>期货</strong>：英文名是Futures，与现货完全不同，现货是实实在在可以交易的货（商品），期货主要不是货，而是以某种大众产品（如棉花、大豆、石油等）及金融资产（如股票、债券等）为标的标准化可交易合约。因此，这个标的物可以是某种商品（例如黄金、原油、农产品），也可以是金融工具。</p>
</li>
<li><p><strong>强行平仓</strong>：当会员或客户的交易保证金不足且未在规定时间内补足，或者当会员或客户的持仓数量超出规定的限额时，交易所或期货经纪公司为了防止风险进一步扩大，强制平掉会员或客户相应的持仓。</p>
</li>
<li><p><strong>股票仓位</strong>：股票仓位是指投资人实有投资资金和实际投资的比例。比如你有20万用于购买股票，现在用了5万块钱买了股票，其余的15万，暂时空余没有购置股票，这就说明，你的仓位是(5/20)*100%=25%。如你全买了股票，你就满仓了。如你全部卖出股票，你就空仓了。 </p>
<blockquote>
<p>如果目前市场比较危险，随时可能跌，那么就不应该满仓，因为万一市场跌了，你卖期货可能亏，但是你也没有钱买期货，就很被动。通常，在市场比较危险的时候，就应该半仓或者更低的仓位。这样，万一市场大跌，你发现你持有的期货跌到了很低的价位，你可以买进来，等它涨的时候，你把你原来的卖掉，就可以赚一个差价。 一般来说，平时仓位都应该保持在半仓状态，就是说，留有后备军，以防不测。只有在市场非常好的时候，可以短时间满仓操作。</p>
<p>一般来说，当大盘涨幅已大、处于相对高位时，要减仓、轻仓，越往上走，仓位越要降低；在大盘相对低位，要增仓、重仓，越是下跌，仓位愈可加重。“不涨不卖、小涨小卖、大涨大卖；不跌不买、小跌小买、大跌大买”，讲的就是这个道理。 </p>
</blockquote>
<ul>
<li><strong>建仓</strong>：第一笔买入某股票。</li>
<li><strong>持仓</strong>：买入某只股票以后因看好后市，而一直持有该股。</li>
<li><strong>增仓/加仓</strong>：在上涨过程中继续买入。</li>
<li><strong>减仓</strong>：卖出一部分。</li>
<li><strong>斩仓</strong>：就是割肉，亏损卖出股票。</li>
<li><strong>平仓/清仓</strong>：把之前买入的股票全卖掉。</li>
<li><strong>守仓</strong>：就是持有不卖出。</li>
<li><strong>满仓</strong>：把所有用来炒股的钱，都买成了股票。</li>
<li><strong>半仓</strong>：用来炒股的钱，一半买了股票，一半还留着。</li>
<li><strong>空仓</strong>：不持有任何股票。</li>
<li><strong>被套</strong>：预测股票要上涨，而在买进之后价格又下跌了，处于亏损的状况称为被套。</li>
<li><strong>补仓</strong>：被套后在原有仓位的基础上，再买入该股以摊薄成本。即在下跌过程中买入。</li>
<li><strong>摊薄</strong>：由于增发新股等使得分摊到每一股的利润相应减少。发行更多普通股或可转换证券被转换均会造成摊薄或减损。</li>
</ul>
</li>
<li><p><strong>标的(dì)物</strong>：商业买卖合同中的特定名词，标的物指买卖合同中所指的物体或商品。</p>
<blockquote>
<p>举例说明，在房屋租赁中，标的是房屋租赁关系，而标的物是所租赁的房屋。标的和标的物并不是永远共存的，一个合同必须有标的，而不一定有标的物。在提供劳务的合同中，标的是当事人之间的劳务关系。而在劳务合同中，就没有标的物。</p>
</blockquote>
</li>
<li><p><strong>涨停跌停</strong>：指股票交易过程中，为限制涨跌幅，设置一定的幅度，若达到这一幅度，即涨停或跌停。</p>
<blockquote>
<p>涨跌停板是证券管理部门为了防止过度的投机而采取的一种措施，是指一只个股每天的最大涨跌幅度不能超过前一交易日的百分比。普通的股票最大涨跌幅为前一交易日的10%。特别处理股每天的最大涨跌幅不能超过前一交易日的5%。对价股份上市日或新股上市首日不设涨跌幅限制。</p>
</blockquote>
</li>
</ul>
]]></content>
      <categories>
        <category>Economy</category>
      </categories>
      <tags>
        <tag>economy</tag>
      </tags>
  </entry>
  <entry>
    <title>Journal Articles Reading Report 01</title>
    <url>/posts/journal-articles-reading-report-01/</url>
    <content><![CDATA[<blockquote>
<p>Microstructure and hydrogen embrittlement of additively manufactured Ti-6Al-4V</p>
</blockquote>
<h2 id="1-ARTICLE-CONTENT"><a href="#1-ARTICLE-CONTENT" class="headerlink" title="1. ARTICLE CONTENT"></a>1. ARTICLE CONTENT</h2><h3 id="1-1-Aim-of-the-research"><a href="#1-1-Aim-of-the-research" class="headerlink" title="1.1 Aim of the research"></a>1.1 Aim of the research</h3><p>To increase the understanding of: </p>
<ul>
<li>how Ti-6Al-4V micro-structure characteristics vary between selected AM processes;</li>
<li>how hydrogen may influence the alloy’s performance. </li>
</ul>
<h3 id="1-2-Main-points-amp-Supporting-arguments"><a href="#1-2-Main-points-amp-Supporting-arguments" class="headerlink" title="1.2 Main points &amp; Supporting arguments"></a>1.2 Main points &amp; Supporting arguments</h3><p>（主要观点和支持性论据）</p>
<ul>
<li>In AM built Ti-6Al-4V the β grains morphology changes drastically by changing from 1 to 5 mm in wall thickness. When the wall is thinner than 2 mm, a curved  morphology of the β grains is formed at the outer layer. Which is explained by that the finely curved β grains are nucleated from the surrounding powder bed growing inwards following the melt pool, until meeting an upward growing β grain that nucleates from the previously deposited layer where no powder nucleation was possible.</li>
<li></li>
</ul>
<h3 id="1-3-Characterization-methods"><a href="#1-3-Characterization-methods" class="headerlink" title="1.3 Characterization methods"></a>1.3 Characterization methods</h3><ul>
<li>light optical microscopes (LOM) </li>
<li>scanning electron microscopes (SEM)</li>
<li>neutron time of flight (TOF) diffraction--&gt; to study the texture within the material</li>
<li>fatigue crack growth (FCG) testing --&gt; to investigate the performance in hydrogen environment</li>
</ul>
<h3 id="1-4-Mechanism"><a href="#1-4-Mechanism" class="headerlink" title="1.4 Mechanism"></a>1.4 Mechanism</h3><h3 id="1-5-Nice-writing-expressions"><a href="#1-5-Nice-writing-expressions" class="headerlink" title="1.5 Nice writing expressions"></a>1.5 Nice writing expressions</h3><ul>
<li>High amounts of α phase, i.e. a large number of HCP crystals,renders the alloy <u>more prone to</u> anisotropy in case of strong texture, <u>due to</u> the inherent anisotropy of the HCP crystal structure.</li>
<li>The atomic packing factor is slightly higher for HCP than for BCC, 0.74 and 0.68 <u>respectively</u>.</li>
<li>When the wall is thinner than 2 mm, a curved morphology of the β grains is formed at the outer layer. <u>Which is explained by</u> that the finely curved β grains are nucleated from the surrounding powder bed growing inwards <u>following</u> the melt pool, until meeting an upward growing β grain that nucleates from the previously deposited layer where no powder nucleation was possible.</li>
<li><u>What these AM processes all have in common</u> is fast cooling rates.</li>
<li></li>
</ul>
<h2 id="2-DEEP-THINKING"><a href="#2-DEEP-THINKING" class="headerlink" title="2. DEEP THINKING"></a>2. DEEP THINKING</h2><h3 id="2-1-Unsolved-problems"><a href="#2-1-Unsolved-problems" class="headerlink" title="2.1 Unsolved problems"></a>2.1 Unsolved problems</h3><h3 id="2-2-Enlightenment"><a href="#2-2-Enlightenment" class="headerlink" title="2.2 Enlightenment"></a>2.2 Enlightenment</h3>]]></content>
      <categories>
        <category>Paper-reading</category>
      </categories>
      <tags>
        <tag>TC4</tag>
        <tag>SLM</tag>
      </tags>
  </entry>
  <entry>
    <title>掠过湖面的微风</title>
    <url>/posts/special-things-in-life/</url>
    <content><![CDATA[<p>读文章时，看访谈节目时，亦或是与人闲谈时，偶尔会有那么几个让我脑海中荡起波纹的时刻。好似在沉睡中被人唤醒，又似肖申克监狱的扬声器里传出意大利歌曲。</p>
<h2 id="1-越是舒服的时候，可能越危险"><a href="#1-越是舒服的时候，可能越危险" class="headerlink" title="1. 越是舒服的时候，可能越危险"></a>1. 越是舒服的时候，可能越危险</h2><div align=center><img src="https://i.loli.net/2020/03/11/7CvUgSqweuWQIZs.jpg" width="60%" height="60%"></div>

<h2 id="2-虚拟世界里的成就，在现实世界中一文不值"><a href="#2-虚拟世界里的成就，在现实世界中一文不值" class="headerlink" title="2. 虚拟世界里的成就，在现实世界中一文不值"></a>2. 虚拟世界里的成就，在现实世界中一文不值</h2><div align=center><img src="https://i.loli.net/2020/03/11/s8G9RHn5iNwQhjo.jpg" width="60%" height="60%"></div>

<h2 id="3-把一件事放到历史位置上，便清晰起来"><a href="#3-把一件事放到历史位置上，便清晰起来" class="headerlink" title="3. 把一件事放到历史位置上，便清晰起来"></a>3. 把一件事放到历史位置上，便清晰起来</h2><div align=center><img src="https://i.loli.net/2020/03/13/A1pshrTjOeMwqRH.jpg" width="80%" height="80%"></div>

<h2 id="4-小心，不要成为举着面具的手"><a href="#4-小心，不要成为举着面具的手" class="headerlink" title="4. 小心，不要成为举着面具的手"></a>4. 小心，不要成为举着面具的手</h2><div align=center><img src="https://i.loli.net/2020/03/15/YKZi1vyCALxe4rI.jpg" width="80%" height="80%"></div>

<h2 id="5-人类的成长与个人的成长"><a href="#5-人类的成长与个人的成长" class="headerlink" title="5. 人类的成长与个人的成长"></a>5. 人类的成长与个人的成长</h2><p>在史前时代的几百万年中，有两大转变为此后的全部历史奠定了坚实的基础：</p>
<ul>
<li>灵长类逐渐转变为人类，即具有思维能力的真正的人类；</li>
<li>人类的祖先从坐享大自然恩赐的食物采集者转变为日益摆脱大自然的束缚、掌握自己命运的食物生产者。</li>
</ul>
<p>具有独立思想、摆脱束缚自己掌握命运，这两点对一个人的成长同样是至关重要的。即：从思想上成长和从物质上成长。一个人无法选择从何种家庭何种环境出生，就像人类不能选择从哪个星球出现一样。成长的第一步是走出父母和老师的思维，成为思维独立个体。第二步是在日渐丰富自己思维的过程中开始实践，找到适于自己的途径，从坐享父母的恩赐到掌握自己的命运，成为物质独立个体。</p>
<h2 id="6-体心立方x方向两原子并不紧靠"><a href="#6-体心立方x方向两原子并不紧靠" class="headerlink" title="6. 体心立方x方向两原子并不紧靠"></a>6. 体心立方x方向两原子并不紧靠</h2><div align=center><img src="https://i.loli.net/2020/03/18/vahDG8iC3gJo79E.jpg" width="100%" height="100%"></div>

<center>体心立方只有体对角线方向是紧靠的，而六方密积和面心立方每一层都是紧靠的</center>

<center>（体心立方四托一，而六方密积和面心立方三托一）</center>

<h2 id="7-哪有什么岁月静好，不过是有人替你负重前行"><a href="#7-哪有什么岁月静好，不过是有人替你负重前行" class="headerlink" title="7. 哪有什么岁月静好，不过是有人替你负重前行"></a>7. 哪有什么岁月静好，不过是有人替你负重前行</h2><div align=center><img src="https://i.loli.net/2020/03/25/At2imq1hHfTxNnM.jpg" width="60%" height="60%"></div>

<h2 id="8-打败焦虑最好的方法，是去做那些让你焦虑的事"><a href="#8-打败焦虑最好的方法，是去做那些让你焦虑的事" class="headerlink" title="8. 打败焦虑最好的方法，是去做那些让你焦虑的事"></a>8. 打败焦虑最好的方法，是去做那些让你焦虑的事</h2><p>我们之所以觉得焦虑，无非是因为现在的自己和想象中的自己，很有距离。</p>
<p>那就摒弃杂念，去做那个想象中的自己。</p>
<h2 id="9-马化腾不玩王者荣耀，张一鸣不刷抖音"><a href="#9-马化腾不玩王者荣耀，张一鸣不刷抖音" class="headerlink" title="9. 马化腾不玩王者荣耀，张一鸣不刷抖音"></a>9. 马化腾不玩王者荣耀，张一鸣不刷抖音</h2>]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>special</tag>
      </tags>
  </entry>
  <entry>
    <title>Github使用学习</title>
    <url>/posts/github-study/</url>
    <content><![CDATA[<blockquote>
<p><strong><font color=#499ae0>注：以后听视频课，一定要同时做笔记</font></strong></p>
</blockquote>
<h2 id="一、常用Linix语句"><a href="#一、常用Linix语句" class="headerlink" title="一、常用Linix语句"></a>一、常用Linix语句</h2><ol>
<li><p><code>ls</code> --&gt; 查看目录中的文件</p>
</li>
<li><p><code>pwd</code> --&gt; 显示当前工作路径</p>
</li>
<li><p><code>mkdir [文件名]</code> --&gt; 新建一个文件夹</p>
</li>
<li><p><code>git config --global user.name &#39;[用户名]&#39;</code> --&gt; 设置用户名</p>
</li>
<li><p><code>git config --global user.email &#39;[邮箱地址]&#39;</code> --&gt; 设置用户邮箱</p>
</li>
<li><p><code>git config --list</code> --&gt; 查看设置</p>
</li>
<li><p><code>git init</code> --&gt; 初始化一个仓库（生成一个<code>.git</code>文件夹，用于存储本地仓库的信息）</p>
</li>
<li><p><code>touch [文件名]</code> --&gt; 新建一个文件</p>
</li>
<li><p><code>vim [文件名]</code> --&gt; 进入vim编辑器进行修改文件</p>
</li>
<li><p>在vim编辑器中，按下<code>i</code>进入输入模式，按下<code>esc</code>键退出输入模式，输入<code>:wq</code>或<code>:x</code>可进行保存并退出（或按下快捷键<code>shift + z z</code>）</p>
</li>
<li><p><code>cat [文件名]</code>  --&gt; 从第一个字节开始正向查看文件的内容 </p>
</li>
<li><p><code>git status</code> --&gt; 查看当前所有文件的状况（所在的位置，是工作区还是暂存区）</p>
</li>
<li><p><code>git diff</code> --&gt; 对比查看工作区被跟踪的文件的修改详情（ 只有在版本区中存在的文件才是被跟踪文件 ）</p>
</li>
<li><p><code>git add [文件名]</code> --&gt; 把文件从工作区添加到暂存区</p>
</li>
<li><p><code>git reset -- [文件名]</code>  --&gt; 撤回暂存区中对某文件的修改（若不写文件名，则全部撤回）</p>
</li>
<li><p><code>git rm [文件名]</code> --&gt; 从暂存区中删除文件</p>
</li>
<li><p><code>git commit -m &#39;[提交描述]&#39;</code> --&gt; 把文件从暂存区提交到本地仓库</p>
</li>
<li><p><code>git push</code> --&gt; 将文件从本地仓库同步到Github</p>
</li>
<li><p><code>rm -f file1</code> 删除一个叫做 ‘file1′ 的文件’ </p>
</li>
<li><p><code>rm -rf dir1</code> 删除一个叫做 ‘dir1’ 的目录并同时删除其子文件</p>
</li>
<li><p><strong><code>git clone [仓库地址]</code>  --&gt; 将远程仓库复制到本地</strong></p>
<p>在当前文件夹下，会出现一个与远程仓库同名的文件夹，里面有仓库的所有内容</p>
<p><code>git clone [仓库地址] [新文件名]</code> --&gt; git克隆远程仓库，并在本地重命名</p>
</li>
<li><p><code>git log</code> --&gt; 查看版本区(本地仓库)的历史提交记录（倒序）<br><code>git log --reverse</code>    --&gt;  查看时间正序排列的历史提交信记录<br><code>git log [分支名]</code>   --&gt; 查看某分支的提交历史，不写分支名查看当前所在分支<br><code>git log --oneline</code>   --&gt; 一行显示提交历史<br><code>git log -n</code>   --&gt; 其中 n 是数字，查看最近 n 个提交<br><code>git log --author [贡献者名字]</code>   --&gt; 查看指定贡献者的提交记录<br><code>git log --graph  --&gt;</code> 图示法显示提交历史</p>
</li>
<li><p><code>git reflog</code> --&gt; 查看所有版本记录（可用于历史记录回滚）</p>
</li>
<li><p><code>git reset --hard [历史版本号]</code> --&gt; 回滚到历史某一个版本</p>
</li>
<li><p><code>git branch</code> --&gt;  查看本地全部分支信息；<br><code>git branch -r</code> --&gt; 查看远程所有分支；<br><code>git branch -a</code> --&gt; 查看本地和远程所有分支（仅显示分支名）<br><code>git branch -v</code> --&gt; 显示本地分支名、版本号、本地分支与远程分支的提交同步状态、最新的提交信息<br><code>git branch -vv</code> --&gt; 比上一个多显示出远程分支名</p>
</li>
</ol>
<div align=center><img src="https://i.loli.net/2020/03/13/xP9R34UV7Xadj5k.png" width="100%" height="100%"></div>

<p>运行后有三行信息，依次说明:</p>
<ul>
<li><p>第一行，开头的星号表示<strong>当前所在本地分支</strong>，绿色的 master 是分支名，之所以是绿色，也是因为它是当前所在分支。后面第二项是版本号，第三项中括号里面蓝色的字，表示此分支跟踪的远程分支的名字，当然啦，这也是克隆远程仓库到本地时的默认设置 -- 创建 master 分支并自动跟踪远程同名分支；冒号后面的 ahead 1 表示<strong>本地分支<font color=#499ae0>领先</font></strong>其跟踪的<strong>远程分支</strong>一个提交。最后一项是提交时填写的备注信息。</p>
</li>
<li><p>第二行，是 Git 指针信息，它指向远程仓库的 master 分支，这行信息暂不重要。</p>
</li>
<li><p>第三行，远程分支信息，详见第一行的解释。（remote分支名、版本号、提交信息）</p>
<p><font color=#499ae0><strong>PS：</strong></font> github中README.md关联图片的图片地址是有一定的格式的，其格式如下：<br><code>https://github.com/用户名/repository仓库名/raw/分支名master/图片文件夹名称/.png or.jpg</code></p>
</li>
</ul>
<ol start="26">
<li><code>git reset --soft HEAD^</code> --&gt; 撤销最近的一次提交，将修改还原到暂存区。<code>--soft</code> 表示软退回，对应的还有 <code>--hard</code> 硬退回，后面会讲到，<code>HEAD^</code> 表示撤销一次提交，<code>HEAD^^</code> 表示撤销两次提交，撤销 n 次可以简写为 <code>HEAD~n</code>。</li>
<li><code>git remote -v</code> --&gt;  查看当前远程的版本 </li>
<li><code>git fetch origin master</code> --&gt; 从远程的origin仓库的master分支下载代码到本地的origin master </li>
<li><code>git pull origin</code> --&gt; </li>
<li><code>git merge origin master</code> --&gt; </li>
<li><code>git merge --abort</code> --&gt; Undo a merge</li>
<li><code>git push origin</code> --&gt; </li>
</ol>
<p><strong><font color=#499ae0>注：<code>git fetch</code>、<code>git merge</code>、<code>git pull</code> 三者之间的区别与联系</font></strong></p>
<ul>
<li><code>git fetch</code> and <code>git pull</code>  both are used to <strong>download</strong> new data from a remote repository. </li>
<li><code>git fetch</code> really only downloads new data from a remote repository - but it doesn&#39;t integrate any of this new data into your working files. Fetch is great for getting a fresh view on all the things that happened in a remote repository. </li>
<li><code>git pull</code>, in contrast, is used with a different goal in mind: to update your current HEAD branch with the latest changes from the remote server. This means that pull not only downloads new data; it also directly <strong>integrates</strong> it into your current working copy files. This has a couple of consequences:<ul>
<li>Since <code>git pull</code> tries to merge remote changes with your local ones, a so-called &quot;merge conflict&quot; can occur.  </li>
<li>Like for many other actions, it&#39;s highly recommended to start a <code>git pull</code> only with a clean working copy. This means that you should <em>not</em> have any uncommitted local changes before you pull.</li>
</ul>
</li>
<li>Dealing with &quot;Merge Conflicts&quot;. </li>
</ul>
<h2 id="二、Git初始化及仓库创建和操作"><a href="#二、Git初始化及仓库创建和操作" class="headerlink" title="二、Git初始化及仓库创建和操作"></a>二、Git初始化及仓库创建和操作</h2><ol>
<li><p>基本信息设置 （用户名+邮箱）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config --global user.name 'hughwyc'</span><br><span class="line">git config --global user.email 'hugh.wyc@gmail.com'</span><br></pre></td></tr></table></figure>
</li>
<li><p>初始化一个新的Git仓库</p>
</li>
</ol>
<h2 id="三、向仓库中添加文件"><a href="#三、向仓库中添加文件" class="headerlink" title="三、向仓库中添加文件"></a>三、向仓库中添加文件</h2><ol>
<li>新建文件</li>
<li>将文件从工作区添加到暂存区</li>
<li>将文件从暂存区提交到仓库</li>
</ol>
<h2 id="四、删除文件"><a href="#四、删除文件" class="headerlink" title="四、删除文件"></a>四、删除文件</h2><ol>
<li>删除文件：<code>rm -rf [文件名]</code></li>
<li>删除暂存区中的文件：<code>git rm [文件名]</code></li>
<li>将删除动作提交到本地仓库：<code>git coommit -m &#39;[描述]&#39;</code></li>
</ol>
<h2 id="五、从远程仓库获取最新代码合并到本地分支"><a href="#五、从远程仓库获取最新代码合并到本地分支" class="headerlink" title="五、从远程仓库获取最新代码合并到本地分支"></a>五、从远程仓库获取最新代码合并到本地分支</h2><p>这里共展示两类三种方式。（参考自<a href="https://blog.csdn.net/hanchao5272/article/details/79162130" target="_blank" rel="noopener">hanchao5272</a>）</p>
<h3 id="1-git-pull：获取最新代码到本地，并自动合并到当前分支"><a href="#1-git-pull：获取最新代码到本地，并自动合并到当前分支" class="headerlink" title="1.git pull：获取最新代码到本地，并自动合并到当前分支"></a>1.git pull：获取最新代码到本地，并自动合并到当前分支</h3><p>命令展示</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">//查询当前远程的版本</span><br><span class="line"><span class="meta">$</span><span class="bash"> git remote -v</span></span><br><span class="line">//直接拉取并合并最新代码</span><br><span class="line"><span class="meta">$</span><span class="bash"> git pull origin master [示例1：拉取远端origin/master分支并合并到当前分支]</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git pull origin dev [示例2：拉取远端origin/dev分支并合并到当前分支]</span></span><br></pre></td></tr></table></figure>

<p>分析：不推荐这种方式，因为是直接合并，无法提前处理冲突。</p>
<h3 id="2-git-fetch-merge-获取最新代码到本地，然后手动合并分支"><a href="#2-git-fetch-merge-获取最新代码到本地，然后手动合并分支" class="headerlink" title="2.git fetch + merge: 获取最新代码到本地，然后手动合并分支"></a>2.git fetch + merge: 获取最新代码到本地，然后手动合并分支</h3><h4 id="2-1-额外建立本地分支"><a href="#2-1-额外建立本地分支" class="headerlink" title="2.1.额外建立本地分支"></a>2.1.额外建立本地分支</h4><p>代码展示</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">//查看当前远程的版本</span><br><span class="line"><span class="meta">$</span><span class="bash"> git remote -v </span></span><br><span class="line">//获取最新代码到本地临时分支(本地当前分支为[branch]，获取的远端的分支为[origin/branch])</span><br><span class="line"><span class="meta">$</span><span class="bash"> git fetch origin master:master1  [示例1：在本地建立master1分支，并下载远端的origin/master分支到master1分支中]</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git fetch origin dev:dev1[示例1：在本地建立dev1分支，并下载远端的origin/dev分支到dev1分支中]</span></span><br><span class="line">//查看版本差异</span><br><span class="line"><span class="meta">$</span><span class="bash"> git diff master1 [示例1：查看本地master1分支与当前分支的版本差异]</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git diff dev1    [示例2：查看本地dev1分支与当前分支的版本差异]</span></span><br><span class="line">//合并最新分支到本地分支</span><br><span class="line"><span class="meta">$</span><span class="bash"> git merge master1    [示例1：合并本地分支master1到当前分支]</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git merge dev1   [示例2：合并本地分支dev1到当前分支]</span></span><br><span class="line">//删除本地临时分支</span><br><span class="line"><span class="meta">$</span><span class="bash"> git branch -D master1    [示例1：删除本地分支master1]</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git branch -D dev1 [示例1：删除本地分支dev1]</span></span><br></pre></td></tr></table></figure>

<p>备注：不推荐这种方式，还需要额外对临时分支进行处理。</p>
<h4 id="2-2-不额外建立本地分支"><a href="#2-2-不额外建立本地分支" class="headerlink" title="2.2.不额外建立本地分支"></a>2.2.不额外建立本地分支</h4><p>代码展示</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">//查询当前远程的版本</span><br><span class="line"><span class="meta">$</span><span class="bash"> git remote -v</span></span><br><span class="line">//获取最新代码到本地(本地当前分支为[branch]，获取的远端的分支为[origin/branch])</span><br><span class="line"><span class="meta">$</span><span class="bash"> git fetch origin master  [示例1：获取远端的origin/master分支]</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git fetch origin dev [示例2：获取远端的origin/dev分支]</span></span><br><span class="line">//查看版本差异</span><br><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">log</span> -p master..origin/master [示例1：查看本地master与远端origin/master的版本差异]</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">log</span> -p dev..origin/dev   [示例2：查看本地dev与远端origin/dev的版本差异]</span></span><br><span class="line">//合并最新代码到本地分支</span><br><span class="line"><span class="meta">$</span><span class="bash"> git merge origin/master  [示例1：合并远端分支origin/master到当前分支]</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git merge origin/dev [示例2：合并远端分支origin/dev到当前分支]</span></span><br></pre></td></tr></table></figure>

<p>备注：推荐这种方式</p>
<h2 id="六、把本地仓库信息提交到远程仓库"><a href="#六、把本地仓库信息提交到远程仓库" class="headerlink" title="六、把本地仓库信息提交到远程仓库"></a>六、把本地仓库信息提交到远程仓库</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">// 建立本地仓库和远程仓库的连接</span><br><span class="line">// 查看本地仓库与哪些远程仓库有连接</span><br><span class="line"><span class="meta">$</span><span class="bash"> git remote -v</span></span><br><span class="line">// 让本地仓库与远程仓库新建一个连接（origin是随便起的一个连接名，一般使用这个）</span><br><span class="line"><span class="meta">$</span><span class="bash"> git remote add origin [Git远程仓库地址]</span></span><br><span class="line">// 关闭连接</span><br><span class="line"><span class="meta">$</span><span class="bash"> git remote rm origin</span></span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">//提交之前最好先拉取(origin:连接名；master:主分支)</span><br><span class="line"><span class="meta">$</span><span class="bash"> git pull origin master</span></span><br><span class="line">//把本地代码提交到远程仓库</span><br><span class="line"><span class="meta">$</span><span class="bash"> git push origin master</span></span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">clone</span> [远程Git仓库地址] [别名(可不设置，默认为仓库名)]</span></span><br><span class="line">//真实项目开发流程：</span><br><span class="line">1. 组长或负责人先创建中央仓库（增加协作者）</span><br><span class="line">2. 小组成员基于git clone，把远程仓库及其默认内容克隆到本地一份。</span><br><span class="line">3. 每个组员写完自己的程序后，基于"git add ./git commit -m 'info'/git push",提交自己的代码。</span><br></pre></td></tr></table></figure>

<ul>
<li><code>git clone</code>解决了三件事：<ul>
<li>初始化一个本地仓库 <code>git init</code></li>
<li>与远程仓库保持关联 <code>git remote add</code></li>
<li>把远程仓库默认内容拉取到本地 <code>git pull</code></li>
</ul>
</li>
</ul>
<h2 id="七、Github-Pages-搭建网站"><a href="#七、Github-Pages-搭建网站" class="headerlink" title="七、Github Pages 搭建网站"></a>七、Github Pages 搭建网站</h2><h3 id="1-个人站点"><a href="#1-个人站点" class="headerlink" title="1. 个人站点"></a>1. 个人站点</h3><p>访问：https://用户名.github.io</p>
<h3 id="2-搭建步骤"><a href="#2-搭建步骤" class="headerlink" title="2. 搭建步骤"></a>2. 搭建步骤</h3><ol>
<li>创建个人站点 --&gt; 新建仓库（注：仓库名必须是【用户名.github.io】）</li>
<li>在仓库下新建index.html的文件，即可。</li>
</ol>
<h3 id="附：参考搭建教程"><a href="#附：参考搭建教程" class="headerlink" title="附：参考搭建教程"></a>附：参考搭建教程</h3><ol>
<li><a href="https://www.cxyxiaowu.com/6407.html" target="_blank" rel="noopener">超全面！如何用 GitHub 从零开始搭建一个博客 ？</a></li>
<li><a href="https://hasaik.com/posts/ab21860c.html" target="_blank" rel="noopener">Hexo博客+Next主题深度优化与定制</a></li>
<li><a href="lyxf.live/posts/2063/">hexo-Next主题美化</a></li>
<li><a href="www.cduyzh.com/hexo-settings-3/">基于hexo博客自定义页面样式</a></li>
<li><a href="https://blog.csdn.net/baidu_34310405/article/details/102665373" target="_blank" rel="noopener">Hexo Next主题添加访客统计</a></li>
</ol>
]]></content>
      <categories>
        <category>Coding</category>
      </categories>
      <tags>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title>经济学原理-上</title>
    <url>/posts/principle-of-economics-1/</url>
    <content><![CDATA[<h1 id="第1章-经济学十大原理"><a href="#第1章-经济学十大原理" class="headerlink" title="第1章 经济学十大原理"></a>第1章 经济学十大原理</h1><blockquote>
<p><strong>稀缺性</strong>（scarcity）：社会拥有的资源是有限的，因此不能生产人们希望拥有的所有物品与服务。</p>
<p><strong>经济学</strong>（economics）：研究社会如何管理自己的稀缺资源，研究人们如何做出决策。</p>
</blockquote>
<h2 id="1-1-人们如何做出决策"><a href="#1-1-人们如何做出决策" class="headerlink" title="1.1 人们如何做出决策"></a>1.1 人们如何做出决策</h2><h3 id="1-1-1-原理一：人们面临权衡取舍"><a href="#1-1-1-原理一：人们面临权衡取舍" class="headerlink" title="1.1.1 原理一：人们面临权衡取舍"></a>1.1.1 原理一：人们面临权衡取舍</h3><ul>
<li><p><font color=#499ae0>一个人最宝贵的资源，是<strong>时间</strong>。</font></p>
</li>
<li><p>要求企业减少污染，好处是更清洁的环境和健康水平的提高，代价是企业所有者、工人和消费者的收入减少了。（企业成本高--利润低--工人工资低--商品价格高）</p>
</li>
</ul>
<blockquote>
<p><strong>效率</strong>（efficiency）：社会能从其稀缺资源中得到最大利益。</p>
<p><strong>平等</strong>（equality）：将这些利益平均地分配给社会成员。</p>
</blockquote>
<ul>
<li>效率与平等之间的权衡取舍：当政府把富人的收入再分配给穷人时，就减少了辛勤工作的奖励；结果是人们工作少了，生产的物品和服务也少了。（当政府想把经济蛋糕切为更均等的小份时，这块蛋糕本身变小了。）</li>
</ul>
<h3 id="1-1-2-原理二：某种东西的成本是为了得到它所放弃的东西"><a href="#1-1-2-原理二：某种东西的成本是为了得到它所放弃的东西" class="headerlink" title="1.1.2 原理二：某种东西的成本是为了得到它所放弃的东西"></a>1.1.2 原理二：某种东西的成本是为了得到它所放弃的东西</h3><blockquote>
<p><strong>机会成本</strong>（opportunity cost）：为了得到这种东西所必须放弃的东西。</p>
</blockquote>
<ul>
<li>当做出任何一项决策时，决策者应该认识到每一种可能的行动所带来的机会成本。</li>
</ul>
<h3 id="1-1-3-原理三：理性人考虑边际量"><a href="#1-1-3-原理三：理性人考虑边际量" class="headerlink" title="1.1.3 原理三：理性人考虑边际量"></a>1.1.3 原理三：理性人考虑边际量</h3><blockquote>
<p><strong>理性人</strong>（rational people）系统而有目的地尽最大努力去实现其目标的人。</p>
<p><strong>边际变动</strong>（marginal change）：对现有行动计划的微小增量调整。</p>
</blockquote>
<ul>
<li>理性人通常通过比较边际收益（marginal benefit）与边际成本（marginal cost）来做决策。</li>
<li>边际成本，即<u>在原本固定套餐的基础上</u>，多打一次电话的成本；</li>
<li>边际收益，即多打一次电话的收益。</li>
</ul>
<h3 id="1-1-4-原理四：人们会对激励做出反应"><a href="#1-1-4-原理四：人们会对激励做出反应" class="headerlink" title="1.1.4 原理四：人们会对激励做出反应"></a>1.1.4 原理四：人们会对激励做出反应</h3><blockquote>
<p><strong>激励</strong>（incentive）：引起一个人做出某种行为的某种东西（如惩罚或奖励的预期）</p>
</blockquote>
<ul>
<li>整个经济学的内容可以简单地概括为：“人们会对激励做出反应。其余内容都是对此地解释。”</li>
<li>如果政策改变了激励，那就会使人们改变自己的行为。</li>
<li>汽油税鼓励人们开小型的节油型汽车。汽油税越高，会有更多的人驾驶混合动力型汽车，如果更高，人们就会开始驾驶电动汽车。</li>
</ul>
<h2 id="1-2-人们如何相互影响"><a href="#1-2-人们如何相互影响" class="headerlink" title="1.2 人们如何相互影响"></a>1.2 人们如何相互影响</h2><h3 id="1-2-1-原理五：贸易可以使每个人的状况都变得更好"><a href="#1-2-1-原理五：贸易可以使每个人的状况都变得更好" class="headerlink" title="1.2.1 原理五：贸易可以使每个人的状况都变得更好"></a>1.2.1 原理五：贸易可以使每个人的状况都变得更好</h3><ul>
<li>通过与他人进行进行贸易，每个人可以从事自己最擅长的活动，可以以较低成本获得各种各样的物品与服务。</li>
</ul>
<h3 id="1-2-2-原理六：市场通常是组织经济活动的一种好方法"><a href="#1-2-2-原理六：市场通常是组织经济活动的一种好方法" class="headerlink" title="1.2..2 原理六：市场通常是组织经济活动的一种好方法"></a>1.2..2 原理六：市场通常是组织经济活动的一种好方法</h3><blockquote>
<p><strong>市场经济</strong>（market economy）：当许多企业和家庭在物品与服务市场上相互交易时，通过他们的分散决策配置资源的经济。</p>
</blockquote>
<ul>
<li>看不见的手通过价格机制、供求机制、竞争机制来自动调节人们的行为以使社会福利最大化。</li>
<li>我们每天所需的食物和饮料，不是出自屠户、酿酒师或面包师的恩惠，而是出自他们利己的打算。</li>
<li>每一个人，既不打算促进公共的利益，也不知道自己是在何种程度上促进那种利益，他所盘算的只是他自己的利益。</li>
</ul>
<h3 id="1-2-3-原理七：政府有时可以改善市场结果"><a href="#1-2-3-原理七：政府有时可以改善市场结果" class="headerlink" title="1.2.3 原理七：政府有时可以改善市场结果"></a>1.2.3 原理七：政府有时可以改善市场结果</h3><blockquote>
<p><strong>产权</strong>（property rights）：指个人拥有并控制稀缺资源的能力。</p>
</blockquote>
<ul>
<li>政府的作用：赋予个人产权；促进效率或促进平等。</li>
</ul>
<blockquote>
<p><strong>市场失灵</strong>（market failure）：市场本身不能有效配置资源的情况。</p>
<p><strong>外部性</strong>（externality）：一个人的行为对旁观者福利的影响。（污染）</p>
<p><strong>市场势力</strong>（market power）：单个经济活动者（或某个经济活动小群体）对市场价格有显著影响的能力。（垄断）</p>
</blockquote>
<ul>
<li>在正常情况下，价格是通过竞争来约束个人的利己行为。</li>
</ul>
<h2 id="1-3-整体经济如何运行"><a href="#1-3-整体经济如何运行" class="headerlink" title="1.3 整体经济如何运行"></a>1.3 整体经济如何运行</h2><h3 id="1-3-1-原理八：一国的生活水平取决于它生产物品与服务的能力"><a href="#1-3-1-原理八：一国的生活水平取决于它生产物品与服务的能力" class="headerlink" title="1.3.1 原理八：一国的生活水平取决于它生产物品与服务的能力"></a>1.3.1 原理八：一国的生活水平取决于它生产物品与服务的能力</h3><blockquote>
<p><strong>生产率</strong>（productivity）：每单位劳动投入所生产的物品与服务的数量</p>
</blockquote>
<h3 id="1-3-2-原理九：当政府发行了过多货币时，物价上涨"><a href="#1-3-2-原理九：当政府发行了过多货币时，物价上涨" class="headerlink" title="1.3.2 原理九：当政府发行了过多货币时，物价上涨"></a>1.3.2 原理九：当政府发行了过多货币时，物价上涨</h3><blockquote>
<p><strong>通货膨胀</strong>（inflation）：经济中物价总水平的上升。</p>
</blockquote>
<ul>
<li>通货膨胀的罪魁祸首时货币量的增长。</li>
</ul>
<h3 id="1-3-3-原理十：社会面临通货膨胀与失业之间的短期权衡取舍"><a href="#1-3-3-原理十：社会面临通货膨胀与失业之间的短期权衡取舍" class="headerlink" title="1.3.3 原理十：社会面临通货膨胀与失业之间的短期权衡取舍"></a>1.3.3 原理十：社会面临通货膨胀与失业之间的短期权衡取舍</h3><ul>
<li>经济中货币量的增加，刺激了社会的整体支出水平，从而增加了对物品与服务的需求。</li>
<li>需求的增加随着时间的推移，会引起企业提高物价，但同时，它也鼓励企业雇佣更多的工人，并生产更多的物品与服务。</li>
<li>雇佣更多的工人意味着更少的失业。</li>
</ul>
<blockquote>
<p><strong>经济周期</strong>（business cycle）：就业和生产等经济活动的波动。</p>
</blockquote>
<ul>
<li>现代经济学中关于经济周期的论述一般是指经济增长率上升和下降的交替过程，而不是经济总量的增加和减少。一个完整的经济周期包括繁荣、衰退、萧条、复苏四个阶段。衡量经济周期处于什么阶段主要依据国民生产总值、工业生产指数、就业和收入、价格指数、利息率等综合经济活动指标的波动。</li>
<li>破窗谬论：一个无业青年拿一块砖头打碎了面包店的窗户。有人说：“好可恶”，另有人说：“这是一件好事。面包师傅会拿钱请维修工来修窗户，增加了维修工的收入，而维修工又可以把收入作为支出来增加其他人的收入。如此一来，只要窗户足够大，还能促进社会繁荣哩。”</li>
<li>其实破窗并没有创造新的活动，而只是创造了不同的活动。人们看到发生了的活动，但他们没有看到本来会发生的活动。</li>
</ul>
<h1 id="第2章-像经济学家一样思考"><a href="#第2章-像经济学家一样思考" class="headerlink" title="第2章 像经济学家一样思考"></a>第2章 像经济学家一样思考</h1><h2 id="2-1-作为科学家的经济学家"><a href="#2-1-作为科学家的经济学家" class="headerlink" title="2.1 作为科学家的经济学家"></a>2.1 作为科学家的经济学家</h2><h3 id="2-1-4-经济模型-循环流量图"><a href="#2-1-4-经济模型-循环流量图" class="headerlink" title="2.1.4 经济模型-循环流量图"></a>2.1.4 经济模型-循环流量图</h3><blockquote>
<p><strong>循环流量图</strong>（circular-flow diagram）：一个说明货币如何通过市场在家庭与企业之间流动的直观经济模型。</p>
<p><strong>生产要素</strong>：企业用来生产物品和服务的劳动、土地和资本（建筑物和机器）等投入品。</p>
</blockquote>
<h3 id="2-1-5-经济模型-生产可能性边界"><a href="#2-1-5-经济模型-生产可能性边界" class="headerlink" title="2.1.5 经济模型-生产可能性边界"></a>2.1.5 经济模型-生产可能性边界</h3><blockquote>
<p><strong>生产可能性边界</strong>（production possibilities frontier）：表示在可得到的生产要素与生产技术既定时，一个经济所能产生的产品数量的各种组合的图形。</p>
</blockquote>
<h3 id="2-1-6-微观经济学与宏观经济学"><a href="#2-1-6-微观经济学与宏观经济学" class="headerlink" title="2.1.6 微观经济学与宏观经济学"></a>2.1.6 微观经济学与宏观经济学</h3><blockquote>
<p><strong>微观经济学</strong>（microeconomics）：研究家庭和企业如何做出决策，以及它们在市场上如何交易的学科。</p>
<p><strong>宏观经济学</strong>（macroeconomics）：研究整体经济现象，包括通货膨胀、失业和经济增长的学科。</p>
</blockquote>
<h2 id="2-2-作为政策顾问的经济学家"><a href="#2-2-作为政策顾问的经济学家" class="headerlink" title="2.2 作为政策顾问的经济学家"></a>2.2 作为政策顾问的经济学家</h2><ul>
<li>当经济学家试图去解释世界时，他们是科学家；当经济学家视图去帮助改善世界时，他们是政策顾问。</li>
</ul>
<h3 id="2-1-1-实证分析与规范分析"><a href="#2-1-1-实证分析与规范分析" class="headerlink" title="2.1.1 实证分析与规范分析"></a>2.1.1 实证分析与规范分析</h3><blockquote>
<p><strong>实证表述</strong>（positive statements）：试图描述世界是什么样子的观点。</p>
<p><strong>规范表述</strong>（normative statements）：试图描述世界应该是什么样子的观点。</p>
</blockquote>
<ul>
<li>规范结论不仅仅根据实证分析，还要涉及价值判断。</li>
</ul>
<h3 id="2-2-2-华盛顿的经济学家们"><a href="#2-2-2-华盛顿的经济学家们" class="headerlink" title="2.2.2 华盛顿的经济学家们"></a>2.2.2 华盛顿的经济学家们</h3><ul>
<li>经济学和政治哲学家的思想，无论正确与否，实际上都要比一般所想象的更有力量。事实上，这个世界就是由它们统治的。</li>
</ul>
<h3 id="2-2-3-为什么经济学家的建议并不总是被采纳"><a href="#2-2-3-为什么经济学家的建议并不总是被采纳" class="headerlink" title="2.2.3 为什么经济学家的建议并不总是被采纳"></a>2.2.3 为什么经济学家的建议并不总是被采纳</h3><ul>
<li>在总统听取了经济顾问关于什么政策最好的意见后，他还要听取公关顾问、新闻顾问、法律事务顾问、政治顾问等的相关意见，在听取并权衡了所有这些意见之后，总统才决定下一步如何实施。</li>
</ul>
<h2 id="2-4-出发吧"><a href="#2-4-出发吧" class="headerlink" title="2.4 出发吧"></a>2.4 出发吧</h2><ul>
<li><u>经济学家，在某种程度上，应该是数学家、历史学家、政治家和哲学家。他必须了解符号并用文字将其表达出来。他必须根据一般性来深入思考特殊性，并在思绪奔放的同时触及抽象与具体。他必须根据过去，着眼未来和研究现在。他必须考虑到人性或人的制度的每一部分。他必须同时保持坚定而客观的情绪，要像艺术家一样超然而不流俗，但有时又要像政治家一样脚踏实地。</u></li>
</ul>
<h1 id="第3章-相互依存性与贸易的好处"><a href="#第3章-相互依存性与贸易的好处" class="headerlink" title="第3章 相互依存性与贸易的好处"></a>第3章 相互依存性与贸易的好处</h1><ul>
<li>做自己最擅长的事情，可促使整体利益最大化。</li>
</ul>
<h2 id="3-2-比较优势：专业化的动力"><a href="#3-2-比较优势：专业化的动力" class="headerlink" title="3.2 比较优势：专业化的动力"></a>3.2 比较优势：专业化的动力</h2><h3 id="3-2-1-绝对优势"><a href="#3-2-1-绝对优势" class="headerlink" title="3.2.1 绝对优势"></a>3.2.1 绝对优势</h3><blockquote>
<p><strong>绝对优势</strong>（absolute advantage）：一个生产者用比另一个生产者更少的成本生产某种物品的能力。</p>
</blockquote>
<h3 id="3-2-2-机会成本和比较优势"><a href="#3-2-2-机会成本和比较优势" class="headerlink" title="3.2.2 机会成本和比较优势"></a>3.2.2 机会成本和比较优势</h3><ul>
<li>牛肉的机会成本是土豆的机会成本的倒数。</li>
</ul>
<blockquote>
<p><strong>比较优势</strong>（comparative advantage）：一个生产者以低于另一个生产者的机会成本生产某种物品的能力。</p>
</blockquote>
<ul>
<li>尽管一个人可能在生产两种物品上都具有绝对优势，但不可能在生产两种物品上都具有比较优势。</li>
<li>比较优势反映了相对的机会成本。</li>
</ul>
<h3 id="3-2-3-比较优势与贸易"><a href="#3-2-3-比较优势与贸易" class="headerlink" title="3.2.3 比较优势与贸易"></a>3.2.3 比较优势与贸易</h3><ul>
<li>专业化和贸易的好处不是基于绝对优势，而是基于比较优势。</li>
<li>贸易可以使社会上的每个人受益，因为它使人们可以专门从事他们具有比较优势的活动。</li>
</ul>
<h3 id="3-2-4-贸易的价格"><a href="#3-2-4-贸易的价格" class="headerlink" title="3.2.4 贸易的价格"></a>3.2.4 贸易的价格</h3><ul>
<li>对从贸易中获益的双方而言，他们进行贸易的价格在两种机会成本之间。</li>
</ul>
<h1 id="第4章-供给与需求的市场力量"><a href="#第4章-供给与需求的市场力量" class="headerlink" title="第4章 供给与需求的市场力量"></a>第4章 供给与需求的市场力量</h1><ul>
<li>如果你想知道任何一件事或政策将如何影响经济，你就应该先考虑它将如何影响供给和需求。</li>
</ul>
<h2 id="4-1-市场与竞争"><a href="#4-1-市场与竞争" class="headerlink" title="4.1 市场与竞争"></a>4.1 市场与竞争</h2><blockquote>
<p> <strong>市场</strong>（market）：由某种产品或服务的买者和卖者组成的一个群体。</p>
<p><strong>竞争市场</strong>（competitive market）：有许多买者与卖者，以至于每个人对市场价格的影响都微乎其微的市场。</p>
</blockquote>
<h2 id="4-2-需求"><a href="#4-2-需求" class="headerlink" title="4.2 需求"></a>4.2 需求</h2><h3 id="4-2-1-需求曲线"><a href="#4-2-1-需求曲线" class="headerlink" title="4.2.1 需求曲线"></a>4.2.1 需求曲线</h3><blockquote>
<p><strong>需求量</strong>（quantity demanded）：买者愿意并且能够购买的一种物品的数量。</p>
<p><strong>需求定理</strong>（law of demand）：认为在其他条件不变时，一种物品价格的上升导致对该物品的需求量减少的观点。</p>
<p><strong>需求表</strong>（demand schedule）：表示一种物品的价格与需求量之间关系的表格。</p>
<p><strong>需求曲线</strong>（demand curve）：表示一种物品的价格与需求量之间关系的图形。 </p>
</blockquote>
<h3 id="4-2-3-需求曲线的移动"><a href="#4-2-3-需求曲线的移动" class="headerlink" title="4.2.3 需求曲线的移动"></a>4.2.3 需求曲线的移动</h3><ul>
<li>有许多变量会导致需求曲线的移动：收入、相关物品（替代品/互补品）的价格、爱好、预期、买者的数量等。</li>
</ul>
<blockquote>
<p><strong>正常物品</strong>（normal good）：在其他条件相同时，收入增加引起需求量增加的物品。</p>
<p><strong>低档物品</strong>（inferior good）：在其他条件相同时，收入增加引起需求量减少的物品。</p>
<p><strong>替代品</strong>（substitutes）：一种物品价格的上升引起另一种物品需求量增加的两种物品。</p>
<p><strong>互补品</strong>（complements）：一种物品价格的上升引起另一种物品需求量减少的两种物品。</p>
</blockquote>
<h2 id="4-3-供给"><a href="#4-3-供给" class="headerlink" title="4.3 供给"></a>4.3 供给</h2><h3 id="4-3-1-供给曲线"><a href="#4-3-1-供给曲线" class="headerlink" title="4.3.1 供给曲线"></a>4.3.1 供给曲线</h3><blockquote>
<p><strong>供给量</strong>（quantity supplied）：卖者愿意并且能够出售的一种物品的数量。</p>
<p><strong>供给定理</strong>（law of supply）：认为在其他条件不变时，一种物品价格的上升导致该物品的供给量增加的观点。</p>
<p><strong>供给表</strong>（supply schedule）：表示一种物品的价格与供应量之间关系的表格。</p>
<p><strong>供给曲线</strong>（supply curve）：表示一种物品的价格与供应量之间关系的图形。 </p>
</blockquote>
<h3 id="4-3-3-供给曲线的移动"><a href="#4-3-3-供给曲线的移动" class="headerlink" title="4.3.3 供给曲线的移动"></a>4.3.3 供给曲线的移动</h3><ul>
<li>有许多变量会导致供给曲线的移动：投入品价格、技术、预期、卖者的数量等。</li>
</ul>
<h2 id="4-4-供给与需求的结合"><a href="#4-4-供给与需求的结合" class="headerlink" title="4.4 供给与需求的结合"></a>4.4 供给与需求的结合</h2><h3 id="4-4-1-均衡"><a href="#4-4-1-均衡" class="headerlink" title="4.4.1 均衡"></a>4.4.1 均衡</h3><blockquote>
<p><strong>均衡</strong>（equilibrium）：市场价格达到使供给量与需求量相等水平时的状态。</p>
<p><strong>均衡价格</strong>（equilibrium price）：使供给与需求平衡的价格。</p>
<p><strong>均衡数量</strong>（equilibrium quantity）：均衡价格下的供给量与需求量。</p>
<p><strong>过剩</strong>（surplus）：供给量大于需求量的状态。</p>
<p><strong>短缺</strong>（shortage）：需求量大于供给量的状态。</p>
</blockquote>
<div align=center><img src="https://i.loli.net/2020/03/14/RXBgqHPMTeGdD3I.png" width="80%" height="80%"></div>

<blockquote>
<p><strong>供求定理</strong>（law of supply and demand）：认为任何一种物品的价格都会自发调整，使该物品的供给量与需求量达到平衡的状态。</p>
</blockquote>
<h3 id="4-4-2-分析均衡变动的三个步骤"><a href="#4-4-2-分析均衡变动的三个步骤" class="headerlink" title="4.4.2 分析均衡变动的三个步骤"></a>4.4.2 分析均衡变动的三个步骤</h3><ol>
<li><strong>确定该事件是使供给曲线移动还是需求曲线移动（还是使两者都移动）；</strong></li>
<li><strong>确定曲线移动的方向；</strong></li>
<li><strong>用供求图说明这种移动如何改变均衡价格和均衡数量。</strong></li>
</ol>
<p>曲线的移动与沿着曲线的变动：</p>
<ul>
<li>供给曲线的移动被称为“供给变动”；而需求曲线的移动被称为“需求变动”。</li>
<li>沿着一条固定供给曲线的变动被称为“供给量的变动”；而沿着一条固定需求曲线的变动被称为“需求量的变动”。</li>
</ul>
<div align=center><img src="https://i.loli.net/2020/03/14/WFpK1Ul64hCEMes.jpg" width="100%" height="100%"></div>

<center>（说明）需求增加，供给未变 --> 价格上升，均衡数量增加</center>

<h1 id="第5章-弹性及其应用"><a href="#第5章-弹性及其应用" class="headerlink" title="第5章 弹性及其应用"></a>第5章 弹性及其应用</h1><h2 id="5-1-需求弹性"><a href="#5-1-需求弹性" class="headerlink" title="5.1 需求弹性"></a>5.1 需求弹性</h2><blockquote>
<p><strong>弹性</strong>（elasticity）：衡量需求量或供给量对其某种决定因素变动的反应程度的指标。</p>
</blockquote>
<h3 id="5-1-1-需求价格弹性及其决定因素"><a href="#5-1-1-需求价格弹性及其决定因素" class="headerlink" title="5.1.1 需求价格弹性及其决定因素"></a>5.1.1 需求价格弹性及其决定因素</h3><blockquote>
<p><strong>需求价格弹性</strong>（price elasticity of demand）：衡量一种物品需求量对其价格变动反应程度的指标。</p>
</blockquote>
<ul>
<li>如果一种物品的需求量对价格变动的反应很大，就说明这种物品的需求是富有弹性的；如果一种物品的需求量对价格变动的反应很小，就说明这种物品的需求是缺乏弹性的。</li>
<li>任何一种物品的需求价格弹性都衡量当这种物品价格上升时，消费者减少购买该物品的意愿有多强。</li>
<li>需求价格弹性的决定因素有：相近替代品的可获得性、必需品与奢侈品、市场的定义、时间范围等。</li>
</ul>
<h3 id="5-1-2-需求价格弹性的计算"><a href="#5-1-2-需求价格弹性的计算" class="headerlink" title="5.1.2 需求价格弹性的计算"></a>5.1.2 需求价格弹性的计算</h3><ul>
<li>需求价格弹性=需求量变动百分比 / 价格变动百分比</li>
<li>使用中点法可以更好地计算变动百分比。即：变动百分比 = 变动量 / 中点值(而非初始值)</li>
</ul>
<h3 id="5-1-4-各种需求曲线"><a href="#5-1-4-各种需求曲线" class="headerlink" title="5.1.4 各种需求曲线"></a>5.1.4 各种需求曲线</h3><ul>
<li><p>当弹性大于1，即需求量变动的比例大于价格变动的比例时，需求是富有弹性的。</p>
</li>
<li><p>当弹性小于1 ，即需求量变动的比例小于价格变动的比例时，需求是缺乏弹性的。</p>
</li>
<li><p>当弹性等于1，即需求量与价格同比例变动时，我们说需求具有<strong>单位弹性</strong>。</p>
</li>
<li><p>通过某一点的需求曲线越平坦，需求价格弹性就越大；通过某一点的需求弹性越陡峭，需求价格弹性就越小。</p>
</li>
<li><p>现实世界中的几种弹性：鸡蛋（0.1），医疗（0.2），大米（0.5），住房（0.7），牛肉（1.6），餐馆用餐（2.3），苏格兰威士忌酒（4.4）。</p>
</li>
</ul>
<h3 id="5-1-5-总收益与需求价格弹性"><a href="#5-1-5-总收益与需求价格弹性" class="headerlink" title="5.1.5 总收益与需求价格弹性"></a>5.1.5 总收益与需求价格弹性</h3><blockquote>
<p><strong>总收益</strong>（total revenue）：一种物品的买者支付从而卖者得到的量。</p>
<p>用该物品的价格乘以销售量来计算。</p>
</blockquote>
<p>当价格变动时，总收益如何移动：</p>
<ul>
<li>当需求曲线缺乏弹性时，从以更高价格出售中得到的额外收益，大于由于出售数量减少而失去的收益；</li>
<li>当需求曲线富有弹性时，从以更高价格出售中得到的额外收益，小于由于出售数量减少而失去的收益；</li>
</ul>
<h3 id="5-1-6-沿着一条线性需求曲线的弹性和总收益"><a href="#5-1-6-沿着一条线性需求曲线的弹性和总收益" class="headerlink" title="5.1.6 沿着一条线性需求曲线的弹性和总收益"></a>5.1.6 沿着一条线性需求曲线的弹性和总收益</h3><ul>
<li>尽管线性需求曲线的斜率（两个变量变动的比率）是不变的，但弹性（两个变量变动百分比的比率）并不是不变的。</li>
<li>在价格低而数量高的各点上，需求曲线是缺乏弹性的；在价格高而数量低的各点上，需求曲线是富有弹性的。</li>
</ul>
<h2 id="5-2-供给弹性"><a href="#5-2-供给弹性" class="headerlink" title="5.2 供给弹性"></a>5.2 供给弹性</h2><blockquote>
<p><strong>供给价格弹性</strong>（price elasticity of supply）：衡量一种物品的供给量对其价格变动反应程度的指标，用供给量变动百分比处除以价格变动百分比来计算。</p>
</blockquote>
<ul>
<li>当供给量是一条垂直线时，供给完全无弹性；</li>
<li>随着弹性的增大，供给曲线越来越平坦，表明供给量对价格变动的反应越来越大。</li>
</ul>
<h2 id="5-3-供给、需求和弹性的三个应用"><a href="#5-3-供给、需求和弹性的三个应用" class="headerlink" title="5.3 供给、需求和弹性的三个应用"></a>5.3 供给、需求和弹性的三个应用</h2><h3 id="5-3-1-农业的好消息可能对农民来说是坏消息吗"><a href="#5-3-1-农业的好消息可能对农民来说是坏消息吗" class="headerlink" title="5.3.1 农业的好消息可能对农民来说是坏消息吗"></a>5.3.1 农业的好消息可能对农民来说是坏消息吗</h3><ul>
<li>新杂交品种的发明反而会减少农民从销售农作物中所能得到的总收益：由于每个农民都是小麦市场上微不足道的一分子，他把小麦价格视为既定的。对小麦的任何一个既定价格来说，农民使用新品种以便生产并销售更多小麦会更好一些。但当所有农民都这样做时，小麦的供给增加了，价格下降了，而农民的状况也变坏了。</li>
</ul>
<h3 id="5-3-2-为什么石油输出国组织不能保持石油的高价格"><a href="#5-3-2-为什么石油输出国组织不能保持石油的高价格" class="headerlink" title="5.3.2 为什么石油输出国组织不能保持石油的高价格"></a>5.3.2 为什么石油输出国组织不能保持石油的高价格</h3><ul>
<li>供给与需求在短期与长期中的状况时不同的。在短期中，石油的供给和需求都是较为缺乏弹性的。供给缺乏弹性是因为已知的石油贮藏量和石油开采能力不能迅速改变，需求缺乏弹性是因为购买习惯不会立即对价格变动做出反应。而在长期中，OPEC以外的石油生产者对高价格的反应是加强石油勘探并建立新的开采能力。消费者的反应是更为节俭，例如使用新型节油汽车代替老式耗油的汽车。因此，长期供给曲线和需求曲线都更富有弹性。</li>
<li>当OPEC各国一致同意减它们的石油产量时，它们使供给曲线向左移动。尽管各个OPEC成员国销售的石油少了，但短期内价格上升如此之多，以至于OPEC的收入增加了。于此相反，在长期中，当供给和需求较为富有弹性时，供给同样幅度的减少（用供给曲线的水平移动来衡量）只引起价格的小幅度上升。因此，OPEC共同减少供给在长期中无利可图。</li>
</ul>
<h3 id="5-3-3-禁毒增加还是减少了与毒品相关的犯罪"><a href="#5-3-3-禁毒增加还是减少了与毒品相关的犯罪" class="headerlink" title="5.3.3 禁毒增加还是减少了与毒品相关的犯罪"></a>5.3.3 禁毒增加还是减少了与毒品相关的犯罪</h3><ul>
<li>毒品的需求缺乏弹性。禁毒会减少供给，导致价格上升，从而使毒品市场总收益增加，由于趋利性，禁毒会增加与毒品相关的犯罪。</li>
</ul>
<h1 id="第6章-供给、需求与政府政策"><a href="#第6章-供给、需求与政府政策" class="headerlink" title="第6章 供给、需求与政府政策"></a>第6章 供给、需求与政府政策</h1>]]></content>
      <categories>
        <category>Economy</category>
      </categories>
      <tags>
        <tag>economy</tag>
      </tags>
  </entry>
  <entry>
    <title>My first post</title>
    <url>/posts/my-first-blog/</url>
    <content><![CDATA[<p>开学时间仍是未定。在这史无前例的漫长假期中，得益于丰富的网络资源，即使宅在家里，也可以尝试许多<a href="https://www.cxyxiaowu.com/6407.html" target="_blank" rel="noopener">有趣的东西</a>。</p>
<p>一天，同样的24小时，选择不同，收获却有天壤之别。时至今日，我已然在这世上走过了近24年，准确地说，是8690个日子。朱自清先生在同我这年龄时也有过相似的感叹吧。在搭博客找主题模板的过程中，我瞥见了一些大咖们的人生轨迹，自叹不如。回望过去的自己，仿佛鸟儿在天空飞过，虽不曾留下痕迹，不过也算是拍过翅膀了罢。</p>
<p>尝试过一些东西，大体知道了有几样是自己不大喜欢的。前方岔路颇多，如今伫立在这里想，我最终能“绘”出怎样的人生轨迹？可惜这笔中的墨被盖住了，不晓得还剩多少。不过从别人那里知道总共也就大概80年的样子。呵，我竟用去三分之一了呢！</p>
<p>这笔打一生下来就由时间舞动着，不停地涂涂画画，未曾停歇。哪怕我在休息的时候，也被推着画出一小段直线。</p>
]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>blog</tag>
      </tags>
  </entry>
</search>
